[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module generate('http://www.xtext.org/grl/tgrl/TGRL')]
[import org::eclipse::acceleo::module::tgrl::java::services::generateFeatures /]
[import org::eclipse::acceleo::module::tgrl::services::generateServices /]
[import org::eclipse::acceleo::module::tgrl::java::services::generateModelFeatures /]

[**
 * The documentation of the template generateElement.
 * @param aModel
 */]
[template public generateElement(aModel : Model)]
[comment @main/]
[file ('test.jucm', false, 'UTF-8')]
<?xml version="1.0" encoding="ISO-8859-1"?>
<urn:URNspec xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:grl="http:///grl.ecore" xmlns:urn="http:///urn.ecore" name="URNspec" author="Vahdat" created="February 16, 2015 7:08:06 PM EST" modified="February 16, 2015 7:08:10 PM EST" specVersion="2" urnVersion="1.27" nextGlobalID="14">
  <ucmspec>
    <scenarioGroups name="ScenarioGroup5" id="5">
      <scenarios name="ScenarioDef6" id="6"/>
    </scenarioGroups>
  </ucmspec>
  <grlspec>
[for (actor : Actor | gRLspecifications.grlElements->selectByKind(Actor))]
	<actors name="[label/]" id="[id/]" description="[description/]" importance="[importance.toString().toUpperFirst()/]" importanceQuantitative="[importanceQuantitative/]" contRefs="[id/]R"[if (metaData->size()>0)]>
	[PrintMetaData(metaData)/]
	</actors>
	[else]/>		
	[/if]	
[/for]

[for (intentionalElement : IntentionalElement | getAllSuperIntentionalElements(aModel)->selectByKind(IntentionalElement))]
	<intElements name="[label/]" id="[id/]" description="[description/]" decompositionType = "[decompositionType.toString().toUpperFirst()/]" importance="[importance.toString().toUpperFirst()/]" importanceQuantitative="[importanceQuantitative/]" [getType(intentionalElement)/]  [comment][getLinkSrc(aModel, intentionalElement)/] [getLinksDest(aModel, intentionalElement)/][/comment] refs="[id/]R"[if (metaData->size()>0)]>
	[PrintMetaData(metaData)/]
	</intElements>
	[else]/>		
	[/if]
[/for]

[comment][for (connection : Connection | getAllConnections(aModel))]
	<links [getLinkType(connection)/] name="" id="[id/]" refs="//@urndef/@specDiagrams.0/@connections.[i+topIndex-1/]" dest="[dest.name/]" src="[src.name/]"/>
	
[/for][/comment]

    <groups name="StrategiesGroup3" id="3" strategies="4"/>
    <strategies name="EvaluationStrategy4" id="4" author="Vahdat" group="3"/>
    <impactModel/>
    <indicatorGroup name="Time" id="7" isRedesignCategory="true"/>
    <indicatorGroup name="Cost" id="8" isRedesignCategory="true"/>
    <indicatorGroup name="Quality" id="9" isRedesignCategory="true"/>
    <indicatorGroup name="Flexibility" id="10" isRedesignCategory="true"/>
    <featureModel/>
  </grlspec>
  <urndef>
    <specDiagrams xsi:type="grl:GRLGraph" name="GRLGraph2" id="2">
[for (intentionalElement : IntentionalElement | getAllSuperIntentionalElements(aModel)->selectByKind(IntentionalElement))]
      <nodes xsi:type="grl:IntentionalElementRef" name="Int[id/]R" [comment][getSucc(aModel, intentionalElement)/] [getPred(aModel, intentionalElement)/][/comment] id="[id/]R" def="[id/]">
        <metadata name="_height" value="45"/>
        <metadata name="_width" value="110"/>
      </nodes>
[/for]
[for (belief : Belief | getAllSuperIntentionalElements(aModel)->selectByKind(Belief))]
	 <nodes xsi:type="grl:Belief" name="[label/]" id="78" description="[description/]"[if (metaData->size()>0)]>
	[PrintMetaData(metaData)/]
	</nodes>
	[else]/>		
	[/if]	
[comment] <metadata name="AAAA" value="BBBBB"/>[/comment]
[/for]


[comment][for (element : ElementLink | getAllElementLink(aModel))]
	<connections xsi:type="grl:LinkRef" source="[src.id/]R" target="[dest.id/]R" link="[id/]"/>
[/for][/comment]
[for (actor : Actor | gRLspecifications.grlElements->selectByKind(Actor))]
      <contRefs xsi:type="grl:ActorRef" name="ActorRef[id/]R" id="[id/]R" [getNodes(actor)/] width="200" height="200" contDef="[id/]">
        <label/>
      </contRefs>
[/for]
[for (grlcomment : Comment | gRLspecifications.grlElements->selectByKind(Comment))]
	<comments description="[content/]" x="10" y="10" width="200" height="100" fillColor="255,255,200"/>
[/for]
    </specDiagrams>
  </urndef>
  <metadata name="_Use0to100EvaluationRange" value="false"/>
</urn:URNspec>
[/file]
[/template]
