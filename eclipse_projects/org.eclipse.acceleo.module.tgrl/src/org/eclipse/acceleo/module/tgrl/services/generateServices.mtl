[comment encoding = UTF-8 /]
[module generateServices('http://www.xtext.org/grl/tgrl/TGRL')]
[import org::eclipse::acceleo::module::tgrl::java::services::generateModelFeatures /]

[template public getLinkSrc(inModel : Model ,inIntentionalElement : IntentionalElement) post(trim())]
[comment][for (nDecomposition : NormalDecomposition | getAllNormalDecompositions(inModel).oclAsType(NormalDecomposition))]
	[for (ddecompositionEdn : DecompositionEnd | dest)]
		
	[/for]
[/for][/comment]

[if (getAllNormalDecompositions(inModel).oclAsType(NormalDecomposition)->select(src.id=inIntentionalElement.id)->size()>0)]
linksSrc="[for (element : NormalDecomposition | getAllNormalDecompositions(inModel).oclAsType(NormalDecomposition)->select(src.id=inIntentionalElement.id))][id/] [/for]"
[/if]

[comment][for (nDecomposition : NormalDecomposition | getAllNormalDecompositions(inModel).oclAsType(NormalDecomposition))]
[if (src.id = inIntentionalElement.id)]linksSrc="[id/]"[/if]
[/for][/comment]
[/template]
[template public getLinksDest(inModel : Model ,inIntentionalElement : IntentionalElement) post(trim())]
[for (nDecomposition : NormalDecomposition | getAllNormalDecompositions(inModel).oclAsType(NormalDecomposition))]
[for (decompostionEnd : DecompositionEnd | dest)]
[if (id = inIntentionalElement.id)]linksDest="[id/]"[/if]
[/for]
[/for]
[/template]
[comment][template public getSucc(inModel : Model ,inIntentionalElement : IntentionalElement) post(trim())]

[if (getAllNormalDecompositions(inModel).oclAsType(NormalDecomposition)->select(src.name=inIntentionalElement.name)->size()>0)]
succ="[for (element : NormalDecomposition | getAllNormalDecompositions(inModel).oclAsType(NormalDecomposition)->select(src.name=inIntentionalElement.name))]
[for (loopElement : ElementLink | getAllElementLink(inModel)->asSequence())][if (name =element.name)] //@urndef/@specDiagrams.0/@connections.[i-1/][/if][/for][/for]"
[/if]
[/template][/comment]
[comment][template public getPred(inModel : Model ,inIntentionalElement : IntentionalElement) post(trim())]
[if (getAllElementLink(inModel)->select(dest.name=inIntentionalElement.name)->size()>0)]
pred="[for (element : ElementLink | getAllElementLink(inModel)->select(dest.name=inIntentionalElement.name))]
[for (loopElement : ElementLink | getAllElementLink(inModel)->asSequence())][if (name =element.name)] //@urndef/@specDiagrams.0/@connections.[i-1/][/if][/for][/for]"
[/if]
[/template][/comment]
[template public getType(inIntentionalElement : IntentionalElement) post(trim())]
[if (oclIsKindOf(Softgoal))]
[elseif (oclIsKindOf(Goal))]
type="Goal"
[elseif (oclIsKindOf(Task))]
type="Task"
[elseif (oclIsKindOf(Indicator))]
type="Indicator"
[elseif (oclIsKindOf(Resource))]
type="Ressource"
[/if]
[/template]
[comment][template public getLinkType(inConnection : Connection) post(trim())]
xsi:type="grl:[if (oclIsKindOf(DecompositionEnds))]
Decomposition"
[elseif (oclIsKindOf(DependencyEnds))]
Dependency"
[elseif (oclIsKindOf(ContributionEnds))]
Contribution" contribution="[inElementLink.oclAsType(Contribution).contribution/]" quantitativeContribution="[inElementLink.oclAsType(Contribution).quantitativeContribution/]" [if (inElementLink.oclAsType(Contribution).correlation->size()=0)]correlation="false"
[else]correlation="[inElementLink.oclAsType(Contribution).correlation.toString()/]"[/if]
[/if]
[/template][/comment]
[template public getNodes(inActor : Actor) post(trim())]
[if (elemets->selectByType(IntentionalElement)->size()>0)]
nodes="[for (elementLink : IntentionalElement | elemets->selectByType(IntentionalElement))][id/]R [/for]"
[/if]	
[/template]

[comment][template public getColor(inGRLElement : GRLElement)]
[if (fillColor.toString()='white')]
[elseif (fillColor.toString()='black')]
filled="true" fillColor="0,0,0"
[elseif (fillColor.toString()='blue')]
filled="true" fillColor="96,96,191"
[elseif (fillColor.toString()='green')]
filled="true" fillColor="96,191,96"
[elseif (fillColor.toString()='cyan')]
filled="true" fillColor="96,191,191"
[elseif (fillColor.toString()='red')]
filled="true" fillColor="191,96,96"
[elseif (fillColor.toString()='purple')]
filled="true" fillColor="191,96,191"
[elseif (fillColor.toString()='yellow')]
filled="true" fillColor="191,191,96"
[elseif (fillColor.toString()='gray')]
filled="true" fillColor="160,160,160"
[elseif (fillColor.toString()='lightGray')]
filled="true" fillColor="191,191,191"
[elseif (fillColor.toString()='lightBlue')]
filled="true" fillColor="160,160,255"
[elseif (fillColor.toString()='lightGreen')]
filled="true" fillColor="160,255,160"
[elseif (fillColor.toString()='lightCray')]
filled="true" fillColor="160,255,255"
[elseif (fillColor.toString()='lightRed')]
filled="true" fillColor="255,160,160"
[elseif (fillColor.toString()='lightPurple')]
filled="true" fillColor="255,160,255"
[elseif (fillColor.toString()='lightYellow')]
filled="true" fillColor="255,255,160"
[/if]
[/template][/comment]

[template public getName(inSuperIntentionalElement : SuperIntentionalElement) post(trim())]
[if (label='')]
[name/][else][label/]
[/if]
[/template]
[template public PrintMetaData(inMetadata : Set(Metadata)) post(trim())]
[for (metadata : Metadata | inMetadata)]
<metadata name="[name/]" value="[value/]"/>
[/for]
[/template]

[template public PrintKPIHeader(inModel : Model) post(trim())]
[if (getAllQualitativeMappings()->size()>0)]xmlns:grl.kpimodel="http:///grl/kpimodel.ecore"[/if]
[/template]

[template public getIncludedStrategies (aStrategyGroup : StrategyGroup) ]
[if (strategies->size()>0)]strategies="[for (eStrategy : EvaluationStrategy | strategies)][eStrategy.id/] [/for]"[/if]
[/template]

[template public getIncludedStrategies (aEvaluationStrategy : EvaluationStrategy) ]
[if (superStrategies->size()>0)]includedStrategies="[for (eStrategy : EvaluationStrategy | superStrategies)][eStrategy.id/] [/for]"[/if]
[/template]

[template public getParentStrategies (inModel : Model ,aEvaluationStrategy : EvaluationStrategy) ]
[if (getAllParentStrategis(inModel,aEvaluationStrategy)->size()>0)]parentStrategies="[for (eStrategy : EvaluationStrategy | getAllParentStrategis(inModel,aEvaluationStrategy).oclAsType(EvaluationStrategy))][eStrategy.id/] [/for]"[/if]
[/template]
