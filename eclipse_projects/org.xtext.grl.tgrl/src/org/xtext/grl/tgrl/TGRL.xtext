grammar org.xtext.grl.tgrl.TGRL with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http:///ucm.ecore" as ucmModel
import "http:///urncore.ecore" as urncoreModel
import "http:///urn.ecore" as urnModel
import "http:///asd.ecore" as asdModel
import "http:///grl.ecore" as grlModel


URNspec returns urnModel::URNspec: 
	'urnspec' name= ID '{'
		(
		(urndef=URNdefinition)&
		(grlspec=GRLspec)?&
		(metadata+=Metadata*)&
		(ucmspec=UCMspec)?&
		(urnLinks+=URNlink*)&
		(asdspec=ASDspec)
		)
	'}'
	
;

URNdefinition returns urncoreModel::URNdefinition: 
	'URNdefinition' '{'
		{urncoreModel::URNdefinition}
	'}'
;
ASDspec returns asdModel::ASDspec: 
	'asdspec'  '{'
		{asdModel::ASDspec}		
	'}' 
;
URNlink returns urnModel::URNlink: 
	'urnLink' '{'
	'}'
;
UCMspec returns ucmModel::UCMspec: 
	'ucmSpec' '{'
		
	'}'
;



GRLspec returns grlModel::GRLspec: 
	'grl' '{'
		(
		(links+=ElementLink)*&
		(actors+=Actor)*&
		(intElements+=IntentionalElement)*&
		(impactModel=ImpactModel)?&
		(groups+=StrategiesGroup)*&
		(contributionContexts+=ContributionContext)*&
		(contributionGroups+=ContributionContextGroup)*
		)
	'}'	
;

//**************************************************************************************
ElementLink returns grlModel::ElementLink: 
	Decomposition | Contribution | Dependency
;
Decomposition returns grlModel::Decomposition: 
	'decomposition' name=ID '{'	
		(
		(src=[grlModel::GRLLinkableElement] '->' dest=[grlModel::GRLLinkableElement] ';')&
		('id' '=' id=STRING ';')?&
		('description' '=' description=STRING ';')?&
		('refs' '=' refs+=[grlModel::LinkRef] (',' refs+=[grlModel::LinkRef])* ';')?
		)
	'}'
;
Contribution returns grlModel::Contribution: 
	'contribution' name=ID '{'
		(
		('contribution' '=' contribution=ContributionType ';')?&
		/*
		 *TODO I must give a default value, which is zero, to this attribute.
		 * 		This can be done through the post processing mechanism in xText 
		 */
		('quantitativeContribution' '=' quantitativeContribution=INT ';')?&
		('correlation' '=' correlation=BOOLEAN ';')?&
		('id' '=' id=STRING ';')?&
		('description' '=' description=STRING ';')?&
		('refs' '=' refs+=[grlModel::LinkRef] (',' refs+=[grlModel::LinkRef])* ';')?&
		(src=[grlModel::GRLLinkableElement] '->' dest=[grlModel::GRLLinkableElement] ';')
		)
	'}'
;
Dependency returns grlModel::Dependency:
	'dependency' name=ID '{'
		(
		('id' '=' id=STRING ';')?&
		('description' '=' description=STRING ';')?&
		('refs' '=' refs+=[grlModel::LinkRef] (',' refs+=[grlModel::LinkRef])* ';')?&
		(src=[grlModel::GRLLinkableElement] '->' dest=[grlModel::GRLLinkableElement] ';')
		)
	'}' 
;

//**************************************************************************************

Actor returns grlModel::Actor: 
	'actor' name= ID '{'
		(
		('importance' '=' importance=ImportanceType ';')?&
		/*
		 *TODO I must give a default value, which is zero, to this attribute.
		 * 		This can be done through the post processing mechanism in xText 
		 */
		('importanceQuantitative' '=' importanceQuantitative=INT ';')?&
		('lineColor' '=' lineColor=STRING ';')?&
		('fillColor' '=' fillColor=STRING ';')?&
		('filled' '=' filled = BOOLEAN ';')?&
		('id' '=' id=STRING ';')?&
		('description' '=' description=STRING ';')?&
		('includedActors' '=' includedActors+=[grlModel::Actor](',' includedActors+=[grlModel::Actor])* ';')?&		
		('collapsedRefs' '=' collapsedRefs+=[grlModel::CollapsedActorRef](',' collapsedRefs+=[grlModel::CollapsedActorRef])* ';')?&
		('contRefs' '=' contRefs+=[urncoreModel::IURNContainerRef](',' contRefs+=[urncoreModel::IURNContainerRef])* ';')?
		)
		
	'}'
;

Belief returns grlModel::Belief: 
	'belief' name=ID '{'
		('author' '=' author=STRING ';')?&
		('x' x=INT ';')?&
		('y' y=INT ';')?&
		('id' '=' id=STRING ';')?&
		('description' description=STRING ';')?		
	'}'
;
CollapsedActorRef returns grlModel::CollapsedActorRef: 
	'collapsedActorRef' name=ID '{'
		('x' x=INT ';')?&
		('y' y=INT ';')?&
		('id' '=' id=STRING ';')?&
		('description' description=STRING ';')?	
		('actor' '=' actor=[grlModel::Actor]';')?
	'}'
;

IntentionalElementRef returns grlModel::IntentionalElementRef: 
	'IntentionalElementRef' name=ID '{'
		('criticality' '=' criticality=Criticality ';')?&
		('priority' '=' priority=Priority';')?&
		('def' '=' def=[grlModel::IntentionalElement] ';')?
	'}'
;

IntentionalElement returns grlModel::IntentionalElement: 
	'intentionalElement' name = ID '{'
		('type' '=' type=IntentionalElementType';')?
		('decompositionType' '='decompositionType=DecompositionType ';')?
		('importance' '=' importance=ImportanceType ';')?
		
		/*
		 *TODO I must give a default value, which is zero, to this attribute.
		 * 		This can be done through the post processing mechanism in xText 
		 */
		('importanceQuantitative' '=' importanceQuantitative=INT ';')? 
		('lineColor' '=' lineColor=STRING ';')?
		('fillColor' '=' fillColor=STRING ';')?
		('filled' '=' filled = BOOLEAN ';')?
		('id' '=' id=STRING ';')?
		('description' '=' description=STRING ';')?	
		('ref' '=' refs+=[grlModel::IntentionalElementRef](',' refs+=[grlModel::IntentionalElementRef] )* ';')?
	'}'
;
ImpactModel returns grlModel::ImpactModel: 
	'impactModel' name= ID '{'
	
	'}'
;
StrategiesGroup returns grlModel::StrategiesGroup: 
	'strategiesGroup' name=ID '{'
	'}'
;
ContributionContext returns grlModel::ContributionContext: 
	'contributionContext' name= ID '{'
	'}'
;
ContributionContextGroup returns grlModel::ContributionContextGroup: 
	'contributionContextGroup' name=ID '{'
	'}'
;
EvaluationStrategy returns grlModel::EvaluationStrategy: 
	'EvaluationStrategy' name=ID '{'
	'}'
;
Metadata returns urncoreModel::Metadata: 
	'metaData' name=ID '{'
		(
		('value' '=' value=STRING ';')?
		)
	'}'
;










enum IntentionalElementType returns grlModel::IntentionalElementType:
	Softgoal = 'softGoal' | Goal = 'goal' | Task = 'Task' | 
	Ressource = 'resource'| Indicator = 'indicator'  
;
enum ImportanceType returns grlModel::ImportanceType: 
	 None ='none' | High = 'high' | Medium = 'medium' | Low = 'low'
;
enum DecompositionType returns grlModel::DecompositionType:
	And = 'and' | Or = 'or' | Xor = 'xor' 
;
enum ContributionType returns grlModel::ContributionType: 
	Help = 'help' | Make = 'make' | SomePositive = 'somePositive' |
	Unknown = 'unknown' | SomeNegative = 'someNegative' | Hurt = 'hurt' |
	Break = 'break'  
;
enum QualitativeLabel returns grlModel::QualitativeLabel:
	Denied = 'denied' | WeaklyDenied = 'weaklyDenied' |
	WeaklySatisfied = 'weaklySatisfied' | Satisfied = 'satisfied' |
	Conflict = 'conflict' | Unknown = 'unknown' | None = 'none' 
;

terminal BOOLEAN returns ecore::EBoolean:
'false' | 'true'
;

//Deprecated
enum Criticality returns grlModel::Criticality:
	None ='none' | High = 'high' | Medium = 'medium' | Low = 'low' 
;
//Deprecated
enum Priority returns grlModel::Priority:
	None ='none' | High = 'high' | Medium = 'medium' | Low = 'low' 
;
