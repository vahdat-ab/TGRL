grammar org.xtext.grl.tgrl.TGRL with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

import "http:///urncore.ecore" as urncoreModel
import "http:///urn.ecore" as urnModel
import "http:///asd.ecore" as asdModel
import "http:///grl.ecore" as grlModel
URNspec returns urnModel::URNspec: 
	'urnspec' name= ID '{'
		urndef=URNdefinition
		asdspec=ASDspec
		(grlspec=GRLspec)?
	'}'
	
;
URNdefinition returns urncoreModel::URNdefinition: 
	'URNdefinition' '{'
		{urncoreModel::URNdefinition}
	'}'
;
ASDspec returns asdModel::ASDspec: 
	'asdspec'  '{'
		{asdModel::ASDspec}		
	'}' 
;


GRLspec returns grlModel::GRLspec: 
	'grl' '{'
		(links+=ElementLink*)
		(actors+=Actor*)
		(intElements+=IntentionalElement*)
		(impactModel=ImpactModel)?
		(groups+=StrategiesGroup*)
		(contributionContexts+=ContributionContext*)
		(contributionGroups+=ContributionContextGroup*)		
	'}'	
;

ElementLink returns grlModel::ElementLink: 
	'elementtLink' name= ID '{'
	
	'}'
;
Actor returns grlModel::Actor: 
	'actor' name= ID '{'
		('importance' '=' importance=ImportanceType ';')?
		/*
		 *TODO I must give a default value, which is zero, to this attribute.
		 * 		This can be done through the post processing mechanism in xText 
		 */
		('importanceQuantitative' '=' importanceQuantitative=INT ';')? 
		('lineColor' '=' lineColor=STRING ';')?
		('fillColor' '=' fillColor=STRING ';')?
		('filled' '=' filled = BOOLEAN ';')?
		('id' '=' id=ID ';')?
		('description' '=' description=STRING ';')?
		('includingActor' '=' includedActors+=[grlModel::Actor](',' includedActors+=[grlModel::Actor])* ';')?		
	'}'
;
Belief returns grlModel::Belief: 
	'belief' name=ID '{'
		('author' '=' author=STRING ';')?&
		('x' x=INT ';')?&
		('y' y=INT ';')?&
		('id' '=' id=ID ';')?&
		('description' description=STRING ';')?		
	'}'
;



IntentionalElement returns grlModel::IntentionalElement: 
	'intentionalElement' name = ID '{'
	
	'}'
;
ImpactModel returns grlModel::ImpactModel: 
	'impactModel' name= ID '{'
	
	'}'
;
StrategiesGroup returns grlModel::StrategiesGroup: 
	'strategiesGroup' name=ID '{'
	'}'
;
ContributionContext returns grlModel::ContributionContext: 
	'contributionContext' name= ID '{'
	'}'
;
ContributionContextGroup returns grlModel::ContributionContextGroup: 
	'contributionContextGroup' name=ID '{'
	'}'
;
EvaluationStrategy returns grlModel::EvaluationStrategy: 
	'EvaluationStrategy' name=ID '{'
	'}'
;











enum IntentionalElementType returns grlModel::IntentionalElementType:
	Softgoal = 'softGoal' | Goal = 'goal' | Task = 'Task' | 
	Ressource = 'resource'| Indicator = 'indicator'  
;
enum ImportanceType returns grlModel::ImportanceType: 
	 None ='none' | High = 'high' | Medium = 'medium' | Low = 'low'
;
enum DecompositionType returns grlModel::DecompositionType:
	And = 'and' | Or = 'or' | Xor = 'xor' 
;
enum ContributionType returns grlModel::ContributionType: 
	Make = 'make' | Help = 'help' | SomePositive = 'somePositive' |
	Unknown = 'unknown' | SomeNegative = 'someNegative' | Hurt = 'hurt' |
	Break = 'break'  
;
terminal BOOLEAN returns ecore::EBoolean:
'false' | 'true'
;
