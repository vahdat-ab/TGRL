grammar org.xtext.grl.tgrl.TGRL with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
//import "http:///ucm.ecore" as ucmModel
//import "http:///urncore.ecore" as urncoreModel
//import "http:///urn.ecore" as urnModel
//import "http:///asd.ecore" as asdModel
//import "http:///grl.ecore" as grlModel

generate tGRL "http://www.xtext.org/grl/tgrl/TGRL"

Model:
	gRLspecifications+=GRLSpecification*;

Element:
	GRLSpecification | GRLBaseElement 
;
GRLBaseElement:
	 GRLElement | Mapping  | InLineElementLink
;
GRLElement:
	
	SuperIntentionalElement | NormalElementLink| Actor | StrategyGroup | IndicatorGroup | EvaluationStrategy | Evaluation | 
	ContributionGroup |	ContributionContext | 
	QualitativeMapping | Metadata | Comment | LinkType 
	
;
SuperIntentionalElement:
	IntentionalElement | Belief
;
IntentionalElement:
	 Softgoal | Goal  | Task | Resource | Indicator 
;

GRLSpecification: 
	{GRLSpecification}
	'grl' (name=ID)? '{'
		(grlElements+=GRLElement  )*
//		(
//			(impactModel=ImpactModel)?
//			(
//				links+=ElementLink | actors+=Actor | intElements+=SuperIntentionalElement | 
//				strategies+=EvaluationStrategy | contributionGroups+=ContributionContextGroup |
//				contributionContexts+=ContributionContext | kpiConv+=KPIConversion	| kpiInformationElements+=KPIInformationElement |
//				kpiModelLinks+=KPIModelLink | indicatorGroup+=IndicatorGroup
//			)*	
//		)
	'}'	
;

//*************************************Actor******************************************
Actor: 
	'actor' name= ID
	(
		';' |
		(
		'{'
			(
			('name' '=' label =STRING ';')?&	
			/*
			 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			('importance' '='  (importance=ImportanceType | importanceQuantitative=QUALITATIVEVALUE) ';')?&
			('description' '=' description=STRING ';')?&
			(metaData+=Metadata)*&
			('color' '=' fillColor = Color ';')?&
			(elemets+=SuperIntentionalElement  | elemets+=NormalElementLink)*
			)
			
		'}'			
		)
	)
;
//*************************************IntentionalElement******************************************
Softgoal :
	'softGoal' name = ID 
	(
		';' | 
		(
		'{'
			(
				('name' '=' label = STRING ';')?&
				('description' '=' description=STRING ';')?&
				('decompositionType' '=' decompositionType=DecompositionType ';')?&
				/*
				 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
				 * 		This can be done through the post processing mechanism in xText 
				 */
				('importance' '='  (importance=ImportanceType | importanceQuantitative=QUALITATIVEVALUE) ';')?&
				(metaData+=Metadata)*&
				('color' '=' fillColor = Color ';')?&
				(elementLinks+=InLineElementLink)*		
			)
		'}'	
		)		
	)
;
Goal:
'goal' name = ID
(
	';' |
	(
	 '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('decompositionType' '='decompositionType=DecompositionType ';')?&
			/*
			 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			('importance' '='  (importance=ImportanceType | importanceQuantitative=QUALITATIVEVALUE) ';')?&
			(metaData+=Metadata)*&		
			('color' '=' fillColor = Color ';')?&
			(elementLinks+=InLineElementLink)*
		)		
	'}'			
	)
)
; 
Task:
	'task' name = ID
	(
		';' | 
		(
		'{'
			(
				('name' '=' label = STRING ';')?&
				('description' '=' description=STRING ';')?&
				('decompositionType' '='decompositionType=DecompositionType ';')?&
				/*
				 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
				 * 		This can be done through the post processing mechanism in xText 
				 */
				('importance' '='  (importance=ImportanceType | importanceQuantitative=QUALITATIVEVALUE) ';')?&
				(metaData+=Metadata)*&	
				('color' '=' fillColor = Color ';')?&	
				(elementLinks+=InLineElementLink)*	 
			)		
		'}'			
		)
	)
;  
Resource:
	'resource' name = ID 
	(
		';' |
		(
		'{'
			(
				('name' '=' label = STRING ';')?&
				('description' '=' description=STRING ';')?&
				('decompositionType' '='decompositionType=DecompositionType ';')?&
				/*
				 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
				 * 		This can be done through the post processing mechanism in xText 
				 */
				('importance' '='  (importance=ImportanceType | importanceQuantitative=QUALITATIVEVALUE) ';')?&
				(metaData+=Metadata)*&	
				('color' '=' fillColor = Color ';')?&
				(elementLinks+=InLineElementLink)*	
			)		
		'}'			
		)
	)
; 
Indicator:
	'indicator' name = ID
	(
		';' |
		(
		'{'
			(
				('name' '=' label = STRING ';')?&
				('description' '=' description=STRING ';')?&
				('decompositionType' '='decompositionType=DecompositionType ';')?&
				/*
				 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
				 * 		This can be done through the post processing mechanism in xText 
				 */
				('importance' '='  (importance=ImportanceType | importanceQuantitative=QUALITATIVEVALUE) ';')?&
				(metaData+=Metadata)*&
				('color' '=' fillColor = Color ';')?&
				(elementLinks+=InLineElementLink)*			
			)		
		'}'			
		)
	) 
;
Belief: 
	'belief' name=ID
	(
		';' |
		(
		 '{'
			(
				('name' '=' label = STRING ';')?&
				(metaData+=Metadata)*&
				('color' '=' fillColor = Color ';')?&
				('description' '=' description=STRING ';')?
			)		
		'}'			
		)
	)
;	
//*******************************************ElementLink*******************************************
ElementLink:
	NormalElementLink | InLineElementLink
;
EndLink:
	 DependencyEnd | ContributionEnd | DecompositionEnd
;

NormalElementLink:
	NormalDecomposition | NormalContribution | NormalDependency | NormalLink
;

NormalLink:
//	src = [GRLElement | QualifiedName] type = [LinkType | QualifiedName] dest += [GRLElement | QualifiedName] (',' dest += [GRLElement | QualifiedName])* ';'
src = [GRLElement] type = [LinkType ] dest += [GRLElement ] (',' dest += [GRLElement])* ';'
;

//Question:
//A Dependency describes how a source actor definition depends on a destination actor definition (the dependee) for an intentional element or indicator (the dependum).
NormalDependency:
	src=[SuperIntentionalElement | QualifiedName] 'dependsOn' dest+=DependencyEnd  (','dest+=DependencyEnd)* ';'
;

NormalContribution:
	src=[SuperIntentionalElement | QualifiedName] 'contributesTo' dest+=ContributionEnd (',' dest+=ContributionEnd)*';'
			/*
			 *TODO I must give a default value, which is 25, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
//			('quantitativeContribution' '=' quantitativeContribution=QUALITATIVEVALUE ';')?&
//			('correlation' '=' correlation=BOOLEAN ';')?&
;

NormalDecomposition:
	src=[SuperIntentionalElement | QualifiedName] 'decomposedBy' dest+=DecompositionEnd (','dest+=DecompositionEnd)* ';'
;

InLineElementLink:
	InLineDecomposition | InLineContribution | InLineDependency | InLineLink
;

InLineLink:
	type = [LinkType | QualifiedName] dest += [GRLElement | QualifiedName] (',' dest += [GRLElement | QualifiedName])* ';'
;

InLineDependency:
	'dependsOn' dest+=DependencyEnd (','dest+=DependencyEnd)* ';'
;

InLineContribution:
	'contributesTo' dest+=ContributionEnd (',' dest+=ContributionEnd)*';'
;

InLineDecomposition:
	'decomposedBy' dest+=DecompositionEnd (','dest+=DecompositionEnd)* ';'
;

DecompositionEnd:
	{DecompositionEnd}
	destName=[SuperIntentionalElement | QualifiedName] 
	(
		'{'
			(description=STRING)?
		'}'	
	)?
;
ContributionEnd:
	{ContributionEnd}
	destName = [SuperIntentionalElement | QualifiedName]
	(
		'{'
			(
			('name' '=' name = ID ';')?&
			( (contribution=ContributionType | quantitativeContribution=QUALITATIVEVALUE)';')?
			)
			
		'}'
	)?
;

DependencyEnd:
	{DependencyEnd}
	destName = [SuperIntentionalElement | QualifiedName]
	(
		'{'
			(description=STRING)?
		'}'
	)?
;

LinkType:
	'link' name = ID ';'
;
//*******************************************Strategy*******************************************
StrategyGroup: 
	'strategyGroup' name=ID ('includes' strategies+=[EvaluationStrategy | QualifiedName](',' strategies+=[EvaluationStrategy | QualifiedName])*)?';'
;
EvaluationStrategy: 
	'strategy' name=ID ('extends' superStrategies+=[EvaluationStrategy | QualifiedName](',' superStrategies+=[EvaluationStrategy | QualifiedName])* )?
	((
		'{'
			(
			(metaData+=Metadata)*&
			evaluations+=Evaluation*
			)
		'}'
	) | (';'))
;
Evaluation:
	/*
	 *TODO I must give a default value for evaluation, which is zero, to this attribute.
	 * 		This can be done through the post processing mechanism in xText 
	 */	
	intentionalElement = [SuperIntentionalElement | QualifiedName] '='
	(
		 ((qualitativeEvaluation=QualitativeLabel | evaluation = QUALITATIVEVALUE ) ';') |
	  
	     ('{'(  (exceeds?='exceeds'';')?& (evalRange=EvaluationRange)?& (kpiEvalValueSet = KPIEvalValueSet)?  )'}' ) 
	
	)

;
EvaluationRange: 
	('start' '=' start=QUALITATIVEVALUE ';')
	('end' '=' end=QUALITATIVEVALUE ';')
	/*
	 *TODO I must give a default value, which is 1, to this attribute.
	 * 		This can be done through the post processing mechanism in xText 
	 */	
	('step' '=' step=QUALITATIVEVALUE ';')
;
//**************************************************************************************
KPIEvalValueSet:
	KPIQuantitativeEvalValueSet | KPIQualitativeEvalValueSet
;
KPIQuantitativeEvalValueSet:
	/*
	 *TODO I must give a default value, which is 0, to this attribute.
	 * 		This can be done through the post processing mechanism in xText 
	 */	
	('target' '=' targetValue=DOUBLE ';')&
	/*
	 *TODO I must give a default value, which is 0, to this attribute.
	 * 		This can be done through the post processing mechanism in xText 
	 */	
	('threshold' '=' thresholdValue=DOUBLE ';')&
	/*
	 *TODO I must give a default value, which is 0, to this attribute.
	 * 		This can be done through the post processing mechanism in xText 
	 */	
	('worst' '=' worstValue=DOUBLE ';')&
	/*
	 *TODO I must give a default value, which is 0, to this attribute.
	 * 		This can be done through the post processing mechanism in xText 
	 */	
	('eval' '=' evaluationValue=DOUBLE ';')&	
	('unit' '=' unit=STRING ';')
;

KPIQualitativeEvalValueSet:
		'qualeval' '=' qualitativeEvaluationValue=[Mapping | QualifiedName] ';'	
;

QualitativeMapping:
	'qualitativeMapping' name=ID '{'
		(
			(metaData+=Metadata)*&
			(mappings+=Mapping)*
		)			
	'}'
;

Mapping:
	name=STRING ',' evaluation=QUALITATIVEVALUE ',' qualitativeEvaluation=QualitativeLabel (',' exceeds=Boolean)? ';'			
;

/********************************************************************************************
 * Looks unnecessary 
 */
ContributionGroup: 
	'contributionGroup' name=ID 'includes' contribs+=[ContributionContext](',' contribs+=[ContributionContext])* ';'
;

ContributionContext: 
	'contribution' name= ID ('extends' superContributionContexts+=[ContributionContext | QualifiedName](',' superContributionContexts+=[ContributionContext | QualifiedName])* )?
	'{'
		(
			(metaData+=Metadata)*&
			(changes+=ContributionChange)*
		)
	'}'
;
ContributionChange:
	/*
	 *TODO I must give a default value for v, which is 0, to this attribute.
	 * 		This can be done through the post processing mechanism in xText 
	 */	
	contribution = [ContributionEnd | QualifiedName] '=' ( 
		(
			( newContribution= ContributionType | newQuantitativeContribution = QUALITATIVEVALUE)';') 
			| ('{' contribRange = ContributionRange '}')
	 	)
;
ContributionRange: 
	('start' '=' start=QUALITATIVEVALUE ';')&
	('end' '=' end=QUALITATIVEVALUE ';')&
	/*
	 *TODO I must give a default value, which is 1, to this attribute.
	 * 		This can be done through the post processing mechanism in xText 
	 */	
	('step' '=' step=QUALITATIVEVALUE ';')?
;

/*
 * Looks unnecessary
 * ******************************************************************************************** 
 */
Metadata:
	'metadata' name = ID '=' value=STRING ';'	
;

Comment:
	'comment' content=STRING ';'
;

IndicatorGroup :
	'indicatorGroup' name=ID 'includes' indicators+=[Indicator | QualifiedName](',' indicators+=[Indicator | QualifiedName])* ';'
//			('isRedesignCategory' '=' isRedesignCategory=BOOLEAN ';')
;

enum ImportanceType: 
	 None = 'none'  | High = 'high'  | Medium = 'medium' | Low = 'low'
;
enum DecompositionType:
	and| or  | xor  
;

enum ContributionType: 
	help | make | somePositive  |
	unknown  | someNegative  | hurt  |
	break 
;

enum QualitativeLabel:
	none | weaklyDenied |
	weaklySatisfied  | satisfied |
	conflict | unknown | denied 
;
enum Color:
	white|black|blue|green|cyan|red|purple|yellow|gray|lightGray|lightBlue|lightGreen|lightCray|lightRed|lightPurple|lightYellow
;
//Deprecated
enum Criticality:
	None | High | Medium | Low  
;
//Deprecated
enum Priority:
	None | High  | Medium  | Low 
;
//Terminals
enum Boolean:
	false | true
;

QualifiedName:
ID ('.' ID)*
;

terminal DOUBLE returns ecore::EDouble: INT ('.' INT+);
/*
 * As a guide for feature
 */
//terminal fragment DIGIT: '0'..'9';
//terminal fragment HEX_DIGIT: (DIGIT |'a'..'f'|'A'..'F');
//terminal fragment ALPHANUM: ('a'..'z'|'A'..'Z'|'_'|DIGIT);
//terminal HEXINT: '0' ('x'|'X') HEX_DIGIT+;
//terminal OCTINT: '0' ('0'..'7')+;
//terminal DOUBLE returns ecore::EDouble: DECINT (('.' DIGIT*) | (('.' DIGIT*)? ('E'|'e') ('-'|'+')? DECINT));  // Use terminal to avoid 'e' turning into a keyword
//terminal DECINT: '0' | ('1'..'9' DIGIT*);
terminal QUALITATIVEVALUE : ('-'|'+')? ( (('0'..'9')('0'..'9')?) | ('100')) ;
