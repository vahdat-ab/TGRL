grammar org.xtext.grl.tgrl.TGRL with org.eclipse.xtext.common.Terminals

//import "http://www.eclipse.org/emf/2002/Ecore" as ecore
//import "http:///ucm.ecore" as ucmModel
//import "http:///urncore.ecore" as urncoreModel
//import "http:///urn.ecore" as urnModel
//import "http:///asd.ecore" as asdModel
//import "http:///grl.ecore" as grlModel

generate tGRL "http://www.xtext.org/grl/tgrl/TGRL"

Model:
	gRLspecs+=GRLspec*;

GRLModelElement:
	GRLNode | GRLLinkableElement | ElementLink | StrategiesGroup | EvaluationStrategy | 
	ContributionContextGroup | ContributionContext
;
GRLNode:
	Belief | CollapsedActorRef | IntentionalElementRef
;
GRLLinkableElement:
	IntentionalElement | Actor
;	
IntentionalElement:
	 Softgoal | Goal  | Task | Ressource | Indicator
;
ElementLink: 
	Decomposition | Contribution | Dependency
;
GRLspec: 
	'grl' '{'
		(
			(impactModel=ImpactModel)?
			(
				links+=ElementLink | actors+=Actor | intElements+=IntentionalElement | groups+=StrategiesGroup | 
				strategies+=EvaluationStrategy | contributionGroups+=ContributionContextGroup |
				contributionContexts+=ContributionContext 	
			)*	
		)
	'}'	
;


Actor: 
	'actor' name= ID '{'
		(
		('name' '=' label =STRING ';')?&	
		('importance' '=' importance=ImportanceType ';')?&
		/*
		 *TODO I must give a default value, which is zero, to this attribute.
		 * 		This can be done through the post processing mechanism in xText 
		 */
		('importanceQuantitative' '=' importanceQuantitative=INT ';')?&
		('description' '=' description=STRING ';')?&
		('includedActors' '=' includedActors+=[Actor](',' includedActors+=[Actor])* ';')?&		
		('collapsedRefs' '=' collapsedRefs+=[CollapsedActorRef](',' collapsedRefs+=[CollapsedActorRef])* ';')?
//		('contRefs' '=' contRefs+=[urncoreModel::IURNContainerRef](',' contRefs+=[urncoreModel::IURNContainerRef])* ';')?
		)
		
	'}'
;


//*************************************IntentionalElement******************************************
Softgoal :
	'softGoal' name = ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('importance' '=' importance=ImportanceType ';')?&
			('decompositionType' '=' decompositionType=DecompositionType ';')?&
			/*
			 *TODO I must give a default value, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			('importanceQuantitative' '=' importanceQuantitative=INT ';')?&
			('refs' '=' refs+=[IntentionalElementRef](',' refs+=[IntentionalElementRef] )* ';')?&
			('evals' '=' evals+=[Evaluation](',' evals+=[Evaluation] )* ';')?
			
		)
	'}'
;
Goal:
	'goal' name = ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('importance' '=' importance=ImportanceType ';')?&
			('decompositionType' '='decompositionType=DecompositionType ';')?&
			/*
			 *TODO I must give a default value, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			('importanceQuantitative' '=' importanceQuantitative=INT ';')?&
			('refs' '=' refs+=[IntentionalElementRef](',' refs+=[IntentionalElementRef] )* ';')?&
			('evals' '=' evals+=[Evaluation](',' evals+=[Evaluation] )* ';')?
			
		)		
	'}'
; 
Task:
	'Task' name = ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('importance' '=' importance=ImportanceType ';')?&
			('decompositionType' '='decompositionType=DecompositionType ';')?&
			/*
			 *TODO I must give a default value, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			('importanceQuantitative' '=' importanceQuantitative=INT ';')?&
			('refs' '=' refs+=[IntentionalElementRef](',' refs+=[IntentionalElementRef] )* ';')?&
			('evals' '=' evals+=[Evaluation](',' evals+=[Evaluation] )* ';')?
			 
		)		
	'}'
;  
Ressource:
	'resource' name = ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('importance' '=' importance=ImportanceType ';')?&
			('decompositionType' '='decompositionType=DecompositionType ';')?&
			/*
			 *TODO I must give a default value, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			('importanceQuantitative' '=' importanceQuantitative=INT ';')?&
			('refs' '=' refs+=[IntentionalElementRef](',' refs+=[IntentionalElementRef] )* ';')?&
			('evals' '=' evals+=[Evaluation](',' evals+=[Evaluation] )* ';')?
			
		)		
	'}'
; 
Indicator:
	'indicator' name = ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('importance' '=' importance=ImportanceType ';')?&
			('decompositionType' '='decompositionType=DecompositionType ';')?&
			/*
			 *TODO I must give a default value, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			('importanceQuantitative' '=' importanceQuantitative=INT ';')?&
			('refs' '=' refs+=[IntentionalElementRef](',' refs+=[IntentionalElementRef] )* ';')?&
			('evals' '=' evals+=[Evaluation](',' evals+=[Evaluation] )* ';')?
			
		)		
	'}'
;  
//*******************************************ElementLink*******************************************
Decomposition: 
	'decomposition' (name=ID)? '{'	
		(
			('name' '=' label = STRING)?&
			('description' '=' description=STRING ';')?&
	//		('refs' '=' refs+=[LinkRef] (',' refs+=[LinkRef])* ';')?
			(src=[GRLLinkableElement] '->' dest=[GRLLinkableElement] ';')
		)
	'}'
;
Contribution: 
	'contribution' (name=ID)? '{'
		(
			('name' '=' label = STRING)?&
			('contribution' '=' contribution=ContributionType ';')?&
			/*
			 *TODO I must give a default value, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			('quantitativeContribution' '=' quantitativeContribution=INT ';')?&
			('correlation' '=' correlation=BOOLEAN ';')?&
			('description' '=' description=STRING ';')?&
	//		('refs' '=' refs+=[LinkRef] (',' refs+=[LinkRef])* ';')?&
			(src=[GRLLinkableElement] '->' dest=[GRLLinkableElement] ';')
		)
	'}'
;
Dependency:
	'dependency' (name=ID)? '{'
		(
			('name' '=' label = STRING)?&
			('description' '=' description=STRING ';')?&
	//		('refs' '=' refs+=[grlModel::LinkRef] (',' refs+=[grlModel::LinkRef])* ';')?&
			(src=[GRLLinkableElement] '->' dest=[GRLLinkableElement] ';')
		)
	'}' 
;
//**************************************************************************************
Belief: 
	'belief' name=ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' description=STRING ';')?
		)		
	'}'
;	

CollapsedActorRef: 
	'collapsedActorRef' name=ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' description=STRING ';')?	
		)
	'}'
;
IntentionalElementRef : 
	'IntentionalElementRef' name=ID '{'
		(
			('criticality' '=' criticality=Criticality ';')?&
			('priority' '=' priority=Priority';')?&
			('def' '=' def=[IntentionalElement] ';')?					
		)
	'}'
;
ImpactModel :
	'impactModel' name= ID '{'
	'}'
;

//**************************************************************************************
StrategiesGroup: 
	'strategiesGroup' name=ID '{'
		('strategies' '=' strategies+=[EvaluationStrategy](',' strategies+=[EvaluationStrategy])* ';')*
	'}'
;
EvaluationStrategy: 
	'EvaluationStrategy' name=ID '{'
		(
			(
				('evaluations' '=' evaluations+=Evaluation';') | 
				('includedStrategies' '=' includedStrategies+=[EvaluationStrategy](',' includedStrategies+=[EvaluationStrategy])* ';')
			)*
		)
	'}'
;
Evaluation:
	'eval' name = ID '{'
		(
			/*
			 *TODO I must give a default value, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('evaluation' '=' evaluation = INT ';')?&
			('qualitativeEvaluation' '=' qualitativeEvaluation=QualitativeLabel ';')?&
			('exceeds' '=' exceeds = BOOLEAN)?&
			('evalRange' '=' evalRange=EvaluationRange ';')? 
		) 
	'}'
;
EvaluationRange: 
	'evaluationRange' '{'
		(
			('start' '=' start=INT ';')?&
			('end' '=' end=INT ';')?&
			/*
			 *TODO I must give a default value, which is 1, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('step' '=' step=INT ';')?
		)
	'}'
;
ContributionContextGroup: 
	'contributionContextGroup' name=ID '{'
		('contribs' '=' contribs+=[ContributionContext](',' contribs+=[ContributionContext])* ';')
	'}'
;
ContributionContext: 
	'contributionContext' name= ID '{'
		(
			('includedContexts' '=' includedContexts+=[ContributionContext](',' includedContexts+=[ContributionContext])* ';')?&
			('changes' '=' changes+=ContributionChange)*
		)
	'}'
;
ContributionChange:
	'contributionChange' name=ID '{'
		(
			('newContribution' '=' newContribution=ContributionType ';')?&
			/*
			 *TODO I must give a default value, which is 0, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('newQuantitativeContribution' '=' newQuantitativeContribution = INT ';')?&
			('contribRange' '=' contribRange = ContributionRange ';')?
		)
	'}'
;
ContributionRange: 
	'contributionRange' '{'
		(
			('start' '=' start=INT ';')?&
			('end' '=' end=INT ';')?&
			/*
			 *TODO I must give a default value, which is 1, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('step' '=' step=INT ';')?
		)
	'}'
;
Contribub:
	'contrib' name=ID '{'
		(
			('contribution' '=' contribution=ContributionType)?&
			/*
			 *TODO I must give a default value, which is 25, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */				
			('quantitativeContribution' '=' quantitativeContribution=INT)?&
			('correlation' '=' correlation=BOOLEAN)?&
			('changes' '=' changes+=[ContributionChange](',' changes+=[ContributionChange])* ';')?	
		)
	'}'
;
//*******1*******************************************************************************


//
//URNspec returns urnModel::URNspec: 
//	'urnspec' name= ID '{'
//		(
//		(urndef=URNdefinition)&
//		(grlspec=GRLspec)?&
//		(metadata+=Metadata*)&
//		(ucmspec=UCMspec)?&
//		(urnLinks+=URNlink*)&
//		(asdspec=ASDspec)
//		)
//	'}'
//	
//;
//
//URNdefinition returns urncoreModel::URNdefinition: 
//	'URNdefinition' '{'
//		{urncoreModel::URNdefinition}
//	'}'
//;
//ASDspec returns asdModel::ASDspec: 
//	'asdspec'  '{'
//		{asdModel::ASDspec}		
//	'}' 
//;
//URNlink returns urnModel::URNlink: 
//	'urnLink' '{'
//	'}'
//;
//UCMspec returns ucmModel::UCMspec: 
//	'ucmSpec' '{'
//		
//	'}'
//;
//
//




//Metadata returns urncoreModel::Metadata: 
//	'metaData' name=ID '{'
//		(
//		('value' '=' value=STRING ';')?
//		)
//	'}'
//;

//enum IntentionalElementType:
//	Softgoal = 'softGoal' | Goal = 'goal' | Task = 'Task' | 
//	Ressource = 'resource'| Indicator = 'indicator'  
//;
enum ImportanceType: 
	 None ='none' | High = 'high' | Medium = 'medium' | Low = 'low'
;
enum DecompositionType:
	And = 'and' | Or = 'or' | Xor = 'xor' 
;

enum ContributionType: 
	Help = 'help' | Make = 'make' | SomePositive = 'somePositive' |
	Unknown = 'unknown' | SomeNegative = 'someNegative' | Hurt = 'hurt' |
	Break = 'break'  
;

enum QualitativeLabel:
	Denied = 'denied' | WeaklyDenied = 'weaklyDenied' |
	WeaklySatisfied = 'weaklySatisfied' | Satisfied = 'satisfied' |
	Conflict = 'conflict' | Unknown = 'unknown' | None = 'none' 
;

terminal BOOLEAN:
'false' | 'true'
;

//Deprecated
enum Criticality:
	None ='none' | High = 'high' | Medium = 'medium' | Low = 'low' 
;
//Deprecated
enum Priority:
	None ='none' | High = 'high' | Medium = 'medium' | Low = 'low' 
;
