grammar org.xtext.grl.tgrl.TGRL with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
//import "http:///ucm.ecore" as ucmModel
//import "http:///urncore.ecore" as urncoreModel
//import "http:///urn.ecore" as urnModel
//import "http:///asd.ecore" as asdModel
//import "http:///grl.ecore" as grlModel

generate tGRL "http://www.xtext.org/grl/tgrl/TGRL"

Model:
	gRLspecifications+=GRLSpecification*;

Element:
	GRLSpecification | GRLBaseElement
;
GRLBaseElement:
	 GRLElement | InLineElementLink
;
GRLElement:
	IntentionalElement | ElementLink | Actor  
;
IntentionalElement:
	 Softgoal | Goal  | Task | Resource | Indicator
;

ElementLink: 
	Decomposition | Contribution | Dependency
;
InLineElementLink: 
	InLineDecomposition | InLineContribution | InLineDependency
;
GRLSpecification: 
	'grl' (name=ID)? '{'
		(grlElements+=GRLElement)*
//		(
//			(impactModel=ImpactModel)?
//			(
//				links+=ElementLink | actors+=Actor | intElements+=IntentionalElement | groups+=StrategiesGroup | 
//				strategies+=EvaluationStrategy | contributionGroups+=ContributionContextGroup |
//				contributionContexts+=ContributionContext | kpiConv+=KPIConversion	| kpiInformationElements+=KPIInformationElement |
//				kpiModelLinks+=KPIModelLink | indicatorGroup+=IndicatorGroup
//			)*	
//		)
	'}'	
;

Actor: 
	'actor' name= ID '{'
		(
		('name' '=' label =STRING ';')?&	
		/*
		 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
		 * 		This can be done through the post processing mechanism in xText 
		 */
		( (importance=ImportanceType | importanceQuantitative=INT) ';')?&
		('description' '=' description=STRING ';')?&
		('color' '=' fillColor = Color ';')?&
		(elemets+=IntentionalElement  | elemets+=ElementLink)*	
		)
		
	'}'
;
//*************************************IntentionalElement******************************************
Softgoal :
	'softGoal' name = ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('color' '=' fillColor = Color ';')?&
			('decompositionType' '=' decompositionType=DecompositionType ';')?&
			/*
			 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			( (importance=ImportanceType | importanceQuantitative=INT) ';')?&
			(elementLinks+=InLineElementLink)*		
		)
	'}'
;
Goal:
	'goal' name = ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('color' '=' fillColor = Color ';')?&
			('decompositionType' '='decompositionType=DecompositionType ';')?&
			/*
			 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			( (importance=ImportanceType | importanceQuantitative=INT) ';')?&		
			(elementLinks+=InLineElementLink)*
		)		
	'}'
; 
Task:
	'Task' name = ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('color' '=' fillColor = Color ';')?&
			('decompositionType' '='decompositionType=DecompositionType ';')?&
			/*
			 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			( (importance=ImportanceType | importanceQuantitative=INT) ';')?&	
			(elementLinks+=InLineElementLink)*	 
		)		
	'}'
;  
Resource:
	'resource' name = ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('color' '=' fillColor = Color ';')?&
			('decompositionType' '='decompositionType=DecompositionType ';')?&
			/*
			 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			( (importance=ImportanceType | importanceQuantitative=INT) ';')?&	
			(elementLinks+=InLineElementLink)*	
		)		
	'}'
; 
Indicator:
	'indicator' name = ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('color' '=' fillColor = Color ';')?&
			('decompositionType' '='decompositionType=DecompositionType ';')?&
			/*
			 *TODO I must give a default value for importanceQuantitative, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
			( (importance=ImportanceType | importanceQuantitative=INT) ';')?&
			('refs' '=' refs+=[IntentionalElementRef](',' refs+=[IntentionalElementRef] )* ';')?&
			('kpiModelLinksDest' '=' kpiModelLinksDest+=[KPIModelLink](',' kpiModelLinksDest+=[KPIModelLink] )* ';')?&
			('groups''=' groups+=[IndicatorGroup](',' groups+=[IndicatorGroup] )* ';')?&
			(elementLinks+=InLineElementLink)*			
		)		
	'}'
;  
//*******************************************ElementLink*******************************************
Decomposition: 
	src=[IntentionalElement | QualifiedName] 'decomposes' dest+=DecompositionEnd (','dest+=DecompositionEnd)* ';'
//			('name' '=' label = STRING ';')?&
//			('description' '=' description=STRING ';')?&
//			('color' '=' fillColor = Color ';')?&
;
InLineDecomposition:
	'decomposes' dest+=DecompositionEnd (','dest+=DecompositionEnd)* ';'
;
DecompositionEnd:
	name=[IntentionalElement | QualifiedName] 
	(
		'{'
			(description=STRING)?
		'}'	
	)?
;
Contribution: 
	src=[IntentionalElement | QualifiedName] 'contributes' dest+=ContributionEnd (',' dest+=ContributionEnd)*';'
//			('name' '=' label = STRING ';')?&
//			('contribution' '=' contribution=ContributionType ';')?&
			/*
			 *TODO I must give a default value, which is 25, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */
//			('quantitativeContribution' '=' quantitativeContribution=INT ';')?&
//			('correlation' '=' correlation=BOOLEAN ';')?&
//			('description' '=' description=STRING ';')?&
//			('color' '=' fillColor = Color ';')?&				
;
InLineContribution:
	'contributes' dest+=ContributionEnd (',' dest+=ContributionEnd)*';'
;
ContributionEnd:
	name = [IntentionalElement | QualifiedName]
	(
		'{'
			(contribution=ContributionType | quantitativeContribution=INT)?
		'}'
	)?
;
Dependency:
	src=[IntentionalElement | QualifiedName] 'depends' dest+=DependencyEnd (','dest+=DependencyEnd)* ';'
//			('name' '=' label = STRING ';')?&
//			('description' '=' c ';')?&
//			('color' '=' fillColor = Color ';')?&
;
InLineDependency:
	'depends' dest+=DependencyEnd (','dest+=DependencyEnd)* ';'
;
DependencyEnd:
	name = [IntentionalElement | QualifiedName] 
	(
		'{'
			(description=STRING)?
		'}'
	)?
;

//**************************************************************************************

//GRLModelElement:
//	GRLNode | GRLLinkableElement | ElementLink | StrategiesGroup | EvaluationStrategy | 
//	ContributionContextGroup | ContributionContext | KPIConversion | KPIInformationElement | KPIModelLink | IndicatorGroup 
//;
//GRLNode:
//	Belief | CollapsedActorRef | IntentionalElementRef | KPIInformationElementRef
//;


KPIConversion:
	QualitativeMappings
;

Belief: 
	'belief' name=ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' description=STRING ';')?
		)		
	'}'
;	

CollapsedActorRef: 
	'collapsedActorRef' name=ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' description=STRING ';')?	
		)
	'}'
;
IntentionalElementRef : 
	'IntentionalElementRef' name=ID '{'
		(
			('criticality' '=' criticality=Criticality ';')?&
			('priority' '=' priority=Priority';')?&
			('def' '=' def=[IntentionalElement] ';')?					
		)
	'}'
;
ImpactModel :
	'impactModel' name= ID '{'
	'}'
;

//**************************************************************************************
StrategiesGroup: 
	'strategiesGroup' name=ID '{'
		('strategies' '=' strategies+=[EvaluationStrategy](',' strategies+=[EvaluationStrategy])* ';')*
	'}'
;
EvaluationStrategy: 
	'EvaluationStrategy' name=ID '{'
		(
			(
				('evaluations' '=' evaluations+=Evaluation';') | 
				('includedStrategies' '=' includedStrategies+=[EvaluationStrategy](',' includedStrategies+=[EvaluationStrategy])* ';') |
				('kipInforConfig' '='kipInforConfig+=KPIInformationConfig ';')
			)*
		)
	'}'
;
Evaluation:
	'eval' name = ID '{'
		(
			/*
			 *TODO I must give a default value, which is zero, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('evaluation' '=' evaluation = INT ';')?&
			('qualitativeEvaluation' '=' qualitativeEvaluation=QualitativeLabel ';')?&
			('exceeds' '=' exceeds = BOOLEAN)?&
			('evalRange' '=' evalRange=EvaluationRange ';')?&
			('kpiEvalValueSet' '=' kpiEvalValueSet = KPIEvalValueSet ';')?&
			('kpiNewEvalValue' '=' kpiNewEvalValue = KPINewEvalValue)?&
			('inElement' '=' inElement=[IntentionalElement] ';') 
		) 
	'}'
;
EvaluationRange: 
	'evaluationRange' '{'
		(
			('start' '=' start=INT ';')?&
			('end' '=' end=INT ';')?&
			/*
			 *TODO I must give a default value, which is 1, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('step' '=' step=INT ';')?
		)
	'}'
;
ContributionContextGroup: 
	'contributionContextGroup' name=ID '{'
		('contribs' '=' contribs+=[ContributionContext](',' contribs+=[ContributionContext])* ';')
	'}'
;
ContributionContext: 
	'contributionContext' name= ID '{'
		(
			('includedContexts' '=' includedContexts+=[ContributionContext](',' includedContexts+=[ContributionContext])* ';')?&
			('changes' '=' changes+=ContributionChange)*
		)
	'}'
;
ContributionChange:
	'contributionChange' name=ID '{'
		(
			('newContribution' '=' newContribution=ContributionType ';')?&
			/*
			 *TODO I must give a default value, which is 0, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('newQuantitativeContribution' '=' newQuantitativeContribution = INT ';')?&
			('contribRange' '=' contribRange = ContributionRange ';')?
		)
	'}'
;
ContributionRange: 
	'contributionRange' '{'
		(
			('start' '=' start=INT ';')?&
			('end' '=' end=INT ';')?&
			/*
			 *TODO I must give a default value, which is 1, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('step' '=' step=INT ';')?
		)
	'}'
;
QualitativeMappings:
	'qualitativeMappings' name=ID '{'
		(
			('kpiEvalValueSet' '=' kpiEvalValueSet+=[KPIEvalValueSet](',' kpiEvalValueSet+=[KPIEvalValueSet])* ';')*&	
			(mappin+=QualitativeMapping)*	
		)
		
	'}'
;

KPIEvalValueSet:
	'kpiEvalValueSet' name=ID '{'
		(
			/*
			 *TODO I must give a default value, which is 0, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('targetValue' '=' targetValue=DOUBLE ';')?&
			/*
			 *TODO I must give a default value, which is 0, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('thresholdValue' '=' thresholdValue=DOUBLE ';')?&
			/*
			 *TODO I must give a default value, which is 0, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('worstValue' '=' worstValue=DOUBLE ';')?&
			/*
			 *TODO I must give a default value, which is 0, to this attribute.
			 * 		This can be done through the post processing mechanism in xText 
			 */	
			('evaluationValue' '=' evaluationValue=DOUBLE ';')?&	
			('unit' '=' unit=STRING ';')?&
			('qualitativeEvaluationValue' '=' qualitativeEvaluationValue=STRING ';')?						
		)
	'}'
;
QualitativeMapping:

	'qualitativeMapping' name=ID '{'
		(
			('realWorldLabel' '=' realWorldLabel=STRING ';')?&
			('evaluation' '=' evaluation=INT ';')?&
			('qualitativeEvaluation' '=' qualitativeEvaluation=QualitativeLabel ';')?&
			('exceeds' '=' exceeds=BOOLEAN ';')?				
		)
	'}'
;
KPINewEvalValue:
	'kpiNewEvalValue' name=ID '{'
		/*
		 *TODO I must give a default value, which is 0, to this attribute.
		 * 		This can be done through the post processing mechanism in xText 
		 */	
		'evaluationValue' '=' evaluationValue=DOUBLE ';'
	'}'
;
KPIInformationConfig:
	'kpiInformationConfig' name=ID '{'
		(
			('levelOfDimension' '=' levelOfDimension = STRING ';')?&
			('valueOfDimension' '=' valueOfDimension=STRING ';')?&
			('kpiInfoElement' '=' kpiInfoElement=[KPIInformationElement])
		)
	'}'
;
KPIInformationElement:
	'kpiInformationElement' name=ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('kpiModelLinksSrc' '=' kpiModelLinksSrc+=[KPIModelLink](',' kpiModelLinksSrc+=[KPIModelLink] )* ';')?&
			('refs' '=' refs+=[KPIInformationElementRef](',' refs+=[KPIInformationElementRef] )* ';')?
		)
	'}'
;
KPIInformationElementRef:
	'kpiInformationElementRef' name=ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?
		)
	'}'
;
KPIModelLink:
	'kpiModelLink' name=ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?
		)
	'}'
;
IndicatorGroup :
		'indicatorGroup' name=ID '{'
		(
			('name' '=' label = STRING ';')?&
			('description' '=' description=STRING ';')?&
			('isRedesignCategory' '=' isRedesignCategory=BOOLEAN ';')?&
			('indicators''=' indicators+=[Indicator](',' indicators+=[Indicator] )* ';')?
		)
	'}'
;
//*******1*******************************************************************************


//
//URNspec returns urnModel::URNspec: 
//	'urnspec' name= ID '{'
//		(
//		(urndef=URNdefinition)&
//		(grlspec=GRLspec)?&
//		(metadata+=Metadata*)&
//		(ucmspec=UCMspec)?&
//		(urnLinks+=URNlink*)&
//		(asdspec=ASDspec)
//		)
//	'}'
//	
//;
//
//URNdefinition returns urncoreModel::URNdefinition: 
//	'URNdefinition' '{'
//		{urncoreModel::URNdefinition}
//	'}'
//;
//ASDspec returns asdModel::ASDspec: 
//	'asdspec'  '{'
//		{asdModel::ASDspec}		
//	'}' 
//;
//URNlink returns urnModel::URNlink: 
//	'urnLink' '{'
//	'}'
//;
//UCMspec returns ucmModel::UCMspec: 
//	'ucmSpec' '{'
//		
//	'}'
//;
//
//




//Metadata returns urncoreModel::Metadata: 
//	'metaData' name=ID '{'
//		(
//		('value' '=' value=STRING ';')?
//		)
//	'}'
//;

//enum IntentionalElementType:
//	Softgoal = 'softGoal' | Goal = 'goal' | Task = 'Task' | 
//	Ressource = 'resource'| Indicator = 'indicator'  
//;
enum ImportanceType: 
	 None  | High  | Medium | Low
;
enum DecompositionType:
	And| Or  | Xor  
;

enum ContributionType: 
	Help | Make | SomePositive  |
	Unknown  | SomeNegative  | Hurt  |
	Break 
;

enum QualitativeLabel:
	Denied | WeaklyDenied |
	WeaklySatisfied  | Satisfied |
	Conflict | Unknown | None
;
enum Color:
	white|black|blue|green|cyan|red|purple|yellow|gray|lightGray|lightBlue|lightGreen|lightCray|lightRed|lightPurple|lightYellow
;
//Deprecated
enum Criticality:
	None | High | Medium | Low  
;
//Deprecated
enum Priority:
	None | High  | Medium  | Low 
;
//Terminals
terminal BOOLEAN:
'false' | 'true'
;

QualifiedName:
ID ('.' ID)*
;

terminal DOUBLE returns ecore::EDouble: INT ('.' INT+);
/*
 * As a guide for feature
 */
//terminal fragment DIGIT: '0'..'9';
//terminal fragment HEX_DIGIT: (DIGIT |'a'..'f'|'A'..'F');
//terminal fragment ALPHANUM: ('a'..'z'|'A'..'Z'|'_'|DIGIT);
//terminal HEXINT: '0' ('x'|'X') HEX_DIGIT+;
//terminal OCTINT: '0' ('0'..'7')+;
//terminal DOUBLE returns ecore::EDouble: DECINT (('.' DIGIT*) | (('.' DIGIT*)? ('E'|'e') ('-'|'+')? DECINT));  // Use terminal to avoid 'e' turning into a keyword
//terminal DECINT: '0' | ('1'..'9' DIGIT*);
