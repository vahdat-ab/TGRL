/*
* generated by Xtext
*/
package org.xtext.grl.tgrl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class TGRLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class URNspecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "URNspec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUrnspecKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUrndefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUrndefURNdefinitionParserRuleCall_3_0 = (RuleCall)cUrndefAssignment_3.eContents().get(0);
		private final Assignment cAsdspecAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAsdspecASDspecParserRuleCall_4_0 = (RuleCall)cAsdspecAssignment_4.eContents().get(0);
		private final Assignment cGrlspecAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cGrlspecGRLspecParserRuleCall_5_0 = (RuleCall)cGrlspecAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//URNspec returns urnModel::URNspec:
		//	"urnspec" name=ID "{" urndef=URNdefinition asdspec=ASDspec grlspec=GRLspec "}";
		public ParserRule getRule() { return rule; }

		//"urnspec" name=ID "{" urndef=URNdefinition asdspec=ASDspec grlspec=GRLspec "}"
		public Group getGroup() { return cGroup; }

		//"urnspec"
		public Keyword getUrnspecKeyword_0() { return cUrnspecKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//urndef=URNdefinition
		public Assignment getUrndefAssignment_3() { return cUrndefAssignment_3; }

		//URNdefinition
		public RuleCall getUrndefURNdefinitionParserRuleCall_3_0() { return cUrndefURNdefinitionParserRuleCall_3_0; }

		//asdspec=ASDspec
		public Assignment getAsdspecAssignment_4() { return cAsdspecAssignment_4; }

		//ASDspec
		public RuleCall getAsdspecASDspecParserRuleCall_4_0() { return cAsdspecASDspecParserRuleCall_4_0; }

		//grlspec=GRLspec
		public Assignment getGrlspecAssignment_5() { return cGrlspecAssignment_5; }

		//GRLspec
		public RuleCall getGrlspecGRLspecParserRuleCall_5_0() { return cGrlspecGRLspecParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class URNdefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "URNdefinition");
		private final Keyword cURNdefinitionKeyword = (Keyword)rule.eContents().get(1);
		
		//URNdefinition returns urncoreModel::URNdefinition:
		//	"URNdefinition";
		public ParserRule getRule() { return rule; }

		//"URNdefinition"
		public Keyword getURNdefinitionKeyword() { return cURNdefinitionKeyword; }
	}

	public class ASDspecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ASDspec");
		private final Keyword cAsdspecKeyword = (Keyword)rule.eContents().get(1);
		
		//ASDspec returns asdModel::ASDspec:
		//	"asdspec";
		public ParserRule getRule() { return rule; }

		//"asdspec"
		public Keyword getAsdspecKeyword() { return cAsdspecKeyword; }
	}

	public class GRLspecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GRLspec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLinksAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLinksElementLinkParserRuleCall_0_0 = (RuleCall)cLinksAssignment_0.eContents().get(0);
		private final Assignment cActorsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cActorsActorParserRuleCall_1_0 = (RuleCall)cActorsAssignment_1.eContents().get(0);
		private final Assignment cIntElementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIntElementsIntentionalElementParserRuleCall_2_0 = (RuleCall)cIntElementsAssignment_2.eContents().get(0);
		private final Assignment cImpactModelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImpactModelImpactModelParserRuleCall_3_0 = (RuleCall)cImpactModelAssignment_3.eContents().get(0);
		
		//GRLspec returns grlModel::GRLspec:
		//	links+=ElementLink* actors+=Actor* intElements+=IntentionalElement* impactModel=ImpactModel?;
		public ParserRule getRule() { return rule; }

		//links+=ElementLink* actors+=Actor* intElements+=IntentionalElement* impactModel=ImpactModel?
		public Group getGroup() { return cGroup; }

		//links+=ElementLink*
		public Assignment getLinksAssignment_0() { return cLinksAssignment_0; }

		//ElementLink
		public RuleCall getLinksElementLinkParserRuleCall_0_0() { return cLinksElementLinkParserRuleCall_0_0; }

		//actors+=Actor*
		public Assignment getActorsAssignment_1() { return cActorsAssignment_1; }

		//Actor
		public RuleCall getActorsActorParserRuleCall_1_0() { return cActorsActorParserRuleCall_1_0; }

		//intElements+=IntentionalElement*
		public Assignment getIntElementsAssignment_2() { return cIntElementsAssignment_2; }

		//IntentionalElement
		public RuleCall getIntElementsIntentionalElementParserRuleCall_2_0() { return cIntElementsIntentionalElementParserRuleCall_2_0; }

		//impactModel=ImpactModel?
		public Assignment getImpactModelAssignment_3() { return cImpactModelAssignment_3; }

		//ImpactModel
		public RuleCall getImpactModelImpactModelParserRuleCall_3_0() { return cImpactModelImpactModelParserRuleCall_3_0; }
	}

	public class ElementLinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementLink");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cElementtLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ElementLink returns grlModel::ElementLink:
		//	"elementtLink" name=ID "{" "}";
		public ParserRule getRule() { return rule; }

		//"elementtLink" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//"elementtLink"
		public Keyword getElementtLinkKeyword_0() { return cElementtLinkKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ActorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Actor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Actor returns grlModel::Actor:
		//	"actor" name=ID "{" "}";
		public ParserRule getRule() { return rule; }

		//"actor" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//"actor"
		public Keyword getActorKeyword_0() { return cActorKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class IntentionalElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntentionalElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntentionalElementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//IntentionalElement returns grlModel::IntentionalElement:
		//	"intentionalElement" name=ID "{" "}";
		public ParserRule getRule() { return rule; }

		//"intentionalElement" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//"intentionalElement"
		public Keyword getIntentionalElementKeyword_0() { return cIntentionalElementKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ImpactModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImpactModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImpactModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ImpactModel returns grlModel::ImpactModel:
		//	"impactModel" name=ID "{" "}";
		public ParserRule getRule() { return rule; }

		//"impactModel" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//"impactModel"
		public Keyword getImpactModelKeyword_0() { return cImpactModelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	
	
	private final URNspecElements pURNspec;
	private final URNdefinitionElements pURNdefinition;
	private final ASDspecElements pASDspec;
	private final GRLspecElements pGRLspec;
	private final ElementLinkElements pElementLink;
	private final ActorElements pActor;
	private final IntentionalElementElements pIntentionalElement;
	private final ImpactModelElements pImpactModel;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TGRLGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pURNspec = new URNspecElements();
		this.pURNdefinition = new URNdefinitionElements();
		this.pASDspec = new ASDspecElements();
		this.pGRLspec = new GRLspecElements();
		this.pElementLink = new ElementLinkElements();
		this.pActor = new ActorElements();
		this.pIntentionalElement = new IntentionalElementElements();
		this.pImpactModel = new ImpactModelElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.grl.tgrl.TGRL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//URNspec returns urnModel::URNspec:
	//	"urnspec" name=ID "{" urndef=URNdefinition asdspec=ASDspec grlspec=GRLspec "}";
	public URNspecElements getURNspecAccess() {
		return pURNspec;
	}
	
	public ParserRule getURNspecRule() {
		return getURNspecAccess().getRule();
	}

	//URNdefinition returns urncoreModel::URNdefinition:
	//	"URNdefinition";
	public URNdefinitionElements getURNdefinitionAccess() {
		return pURNdefinition;
	}
	
	public ParserRule getURNdefinitionRule() {
		return getURNdefinitionAccess().getRule();
	}

	//ASDspec returns asdModel::ASDspec:
	//	"asdspec";
	public ASDspecElements getASDspecAccess() {
		return pASDspec;
	}
	
	public ParserRule getASDspecRule() {
		return getASDspecAccess().getRule();
	}

	//GRLspec returns grlModel::GRLspec:
	//	links+=ElementLink* actors+=Actor* intElements+=IntentionalElement* impactModel=ImpactModel?;
	public GRLspecElements getGRLspecAccess() {
		return pGRLspec;
	}
	
	public ParserRule getGRLspecRule() {
		return getGRLspecAccess().getRule();
	}

	//ElementLink returns grlModel::ElementLink:
	//	"elementtLink" name=ID "{" "}";
	public ElementLinkElements getElementLinkAccess() {
		return pElementLink;
	}
	
	public ParserRule getElementLinkRule() {
		return getElementLinkAccess().getRule();
	}

	//Actor returns grlModel::Actor:
	//	"actor" name=ID "{" "}";
	public ActorElements getActorAccess() {
		return pActor;
	}
	
	public ParserRule getActorRule() {
		return getActorAccess().getRule();
	}

	//IntentionalElement returns grlModel::IntentionalElement:
	//	"intentionalElement" name=ID "{" "}";
	public IntentionalElementElements getIntentionalElementAccess() {
		return pIntentionalElement;
	}
	
	public ParserRule getIntentionalElementRule() {
		return getIntentionalElementAccess().getRule();
	}

	//ImpactModel returns grlModel::ImpactModel:
	//	"impactModel" name=ID "{" "}";
	public ImpactModelElements getImpactModelAccess() {
		return pImpactModel;
	}
	
	public ParserRule getImpactModelRule() {
		return getImpactModelAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
