/*
* generated by Xtext
*/
package org.xtext.grl.tgrl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class TGRLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class URNspecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "URNspec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUrnspecKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUrndefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUrndefURNdefinitionParserRuleCall_3_0 = (RuleCall)cUrndefAssignment_3.eContents().get(0);
		private final Assignment cAsdspecAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAsdspecASDspecParserRuleCall_4_0 = (RuleCall)cAsdspecAssignment_4.eContents().get(0);
		private final Assignment cGrlspecAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cGrlspecGRLspecParserRuleCall_5_0 = (RuleCall)cGrlspecAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//URNspec returns urnModel::URNspec:
		//	"urnspec" name=ID "{" urndef=URNdefinition asdspec=ASDspec grlspec=GRLspec? "}";
		public ParserRule getRule() { return rule; }

		//"urnspec" name=ID "{" urndef=URNdefinition asdspec=ASDspec grlspec=GRLspec? "}"
		public Group getGroup() { return cGroup; }

		//"urnspec"
		public Keyword getUrnspecKeyword_0() { return cUrnspecKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//urndef=URNdefinition
		public Assignment getUrndefAssignment_3() { return cUrndefAssignment_3; }

		//URNdefinition
		public RuleCall getUrndefURNdefinitionParserRuleCall_3_0() { return cUrndefURNdefinitionParserRuleCall_3_0; }

		//asdspec=ASDspec
		public Assignment getAsdspecAssignment_4() { return cAsdspecAssignment_4; }

		//ASDspec
		public RuleCall getAsdspecASDspecParserRuleCall_4_0() { return cAsdspecASDspecParserRuleCall_4_0; }

		//grlspec=GRLspec?
		public Assignment getGrlspecAssignment_5() { return cGrlspecAssignment_5; }

		//GRLspec
		public RuleCall getGrlspecGRLspecParserRuleCall_5_0() { return cGrlspecGRLspecParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class URNdefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "URNdefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cURNdefinitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Action cURNdefinitionAction_2 = (Action)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//URNdefinition returns urncoreModel::URNdefinition:
		//	"URNdefinition" "{" {urncoreModel::URNdefinition} "}";
		public ParserRule getRule() { return rule; }

		//"URNdefinition" "{" {urncoreModel::URNdefinition} "}"
		public Group getGroup() { return cGroup; }

		//"URNdefinition"
		public Keyword getURNdefinitionKeyword_0() { return cURNdefinitionKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//{urncoreModel::URNdefinition}
		public Action getURNdefinitionAction_2() { return cURNdefinitionAction_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ASDspecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ASDspec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAsdspecKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Action cASDspecAction_2 = (Action)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ASDspec returns asdModel::ASDspec:
		//	"asdspec" "{" {asdModel::ASDspec} "}";
		public ParserRule getRule() { return rule; }

		//"asdspec" "{" {asdModel::ASDspec} "}"
		public Group getGroup() { return cGroup; }

		//"asdspec"
		public Keyword getAsdspecKeyword_0() { return cAsdspecKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//{asdModel::ASDspec}
		public Action getASDspecAction_2() { return cASDspecAction_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class GRLspecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GRLspec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGrlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLinksAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLinksElementLinkParserRuleCall_2_0 = (RuleCall)cLinksAssignment_2.eContents().get(0);
		private final Assignment cActorsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cActorsActorParserRuleCall_3_0 = (RuleCall)cActorsAssignment_3.eContents().get(0);
		private final Assignment cIntElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIntElementsIntentionalElementParserRuleCall_4_0 = (RuleCall)cIntElementsAssignment_4.eContents().get(0);
		private final Assignment cImpactModelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cImpactModelImpactModelParserRuleCall_5_0 = (RuleCall)cImpactModelAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//GRLspec returns grlModel::GRLspec:
		//	"grl" "{" links+=ElementLink* actors+=Actor* intElements+=IntentionalElement* impactModel=ImpactModel? "}";
		public ParserRule getRule() { return rule; }

		//"grl" "{" links+=ElementLink* actors+=Actor* intElements+=IntentionalElement* impactModel=ImpactModel? "}"
		public Group getGroup() { return cGroup; }

		//"grl"
		public Keyword getGrlKeyword_0() { return cGrlKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//links+=ElementLink*
		public Assignment getLinksAssignment_2() { return cLinksAssignment_2; }

		//ElementLink
		public RuleCall getLinksElementLinkParserRuleCall_2_0() { return cLinksElementLinkParserRuleCall_2_0; }

		//actors+=Actor*
		public Assignment getActorsAssignment_3() { return cActorsAssignment_3; }

		//Actor
		public RuleCall getActorsActorParserRuleCall_3_0() { return cActorsActorParserRuleCall_3_0; }

		//intElements+=IntentionalElement*
		public Assignment getIntElementsAssignment_4() { return cIntElementsAssignment_4; }

		//IntentionalElement
		public RuleCall getIntElementsIntentionalElementParserRuleCall_4_0() { return cIntElementsIntentionalElementParserRuleCall_4_0; }

		//impactModel=ImpactModel?
		public Assignment getImpactModelAssignment_5() { return cImpactModelAssignment_5; }

		//ImpactModel
		public RuleCall getImpactModelImpactModelParserRuleCall_5_0() { return cImpactModelImpactModelParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ElementLinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementLink");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cElementtLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ElementLink returns grlModel::ElementLink:
		//	"elementtLink" name=ID "{" "}";
		public ParserRule getRule() { return rule; }

		//"elementtLink" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//"elementtLink"
		public Keyword getElementtLinkKeyword_0() { return cElementtLinkKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ActorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Actor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cImportanceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cImportanceAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cImportanceImportanceTypeEnumRuleCall_3_2_0 = (RuleCall)cImportanceAssignment_3_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cImportanceQuantitativeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cImportanceQuantitativeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cImportanceQuantitativeINTTerminalRuleCall_4_2_0 = (RuleCall)cImportanceQuantitativeAssignment_4_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLineColorKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLineColorAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cLineColorSTRINGTerminalRuleCall_5_2_0 = (RuleCall)cLineColorAssignment_5_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cFillColorKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cFillColorAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cFillColorSTRINGTerminalRuleCall_6_2_0 = (RuleCall)cFillColorAssignment_6_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cFilledKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cFilledAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cFilledBOOLEANTerminalRuleCall_7_2_0 = (RuleCall)cFilledAssignment_7_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cIdKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cIdAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cIdIDTerminalRuleCall_8_2_0 = (RuleCall)cIdAssignment_8_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cDescriptionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cDescriptionAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_9_2_0 = (RuleCall)cDescriptionAssignment_9_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cIncludingActorKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cIncludedActorsAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final CrossReference cIncludedActorsActorCrossReference_10_2_0 = (CrossReference)cIncludedActorsAssignment_10_2.eContents().get(0);
		private final RuleCall cIncludedActorsActorIDTerminalRuleCall_10_2_0_1 = (RuleCall)cIncludedActorsActorCrossReference_10_2_0.eContents().get(1);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cIncludedActorsAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final CrossReference cIncludedActorsActorCrossReference_10_3_1_0 = (CrossReference)cIncludedActorsAssignment_10_3_1.eContents().get(0);
		private final RuleCall cIncludedActorsActorIDTerminalRuleCall_10_3_1_0_1 = (RuleCall)cIncludedActorsActorCrossReference_10_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Actor returns grlModel::Actor:
		//	"actor" name=ID "{" ("importance" "=" importance=ImportanceType ";")? / *
		//		 *TODO I must give a default value, which is zero, to this attribute.
		//		 * 		This can be done through the post processing mechanism in xText 
		//		 * / ("importanceQuantitative" "=" importanceQuantitative=INT ";")? ("lineColor" "=" lineColor=STRING ";")?
		//	("fillColor" "=" fillColor=STRING ";")? ("filled" "=" filled=BOOLEAN ";")? ("id" "=" id=ID ";")? ("description" "="
		//	description=STRING ";")? ("includingActor" "=" includedActors+=[grlModel::Actor] (","
		//	includedActors+=[grlModel::Actor])* ";")? "}";
		public ParserRule getRule() { return rule; }

		//"actor" name=ID "{" ("importance" "=" importance=ImportanceType ";")? / *
		//		 *TODO I must give a default value, which is zero, to this attribute.
		//		 * 		This can be done through the post processing mechanism in xText 
		//		 * / ("importanceQuantitative" "=" importanceQuantitative=INT ";")? ("lineColor" "=" lineColor=STRING ";")?
		//("fillColor" "=" fillColor=STRING ";")? ("filled" "=" filled=BOOLEAN ";")? ("id" "=" id=ID ";")? ("description" "="
		//description=STRING ";")? ("includingActor" "=" includedActors+=[grlModel::Actor] (","
		//includedActors+=[grlModel::Actor])* ";")? "}"
		public Group getGroup() { return cGroup; }

		//"actor"
		public Keyword getActorKeyword_0() { return cActorKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("importance" "=" importance=ImportanceType ";")?
		public Group getGroup_3() { return cGroup_3; }

		//"importance"
		public Keyword getImportanceKeyword_3_0() { return cImportanceKeyword_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }

		//importance=ImportanceType
		public Assignment getImportanceAssignment_3_2() { return cImportanceAssignment_3_2; }

		//ImportanceType
		public RuleCall getImportanceImportanceTypeEnumRuleCall_3_2_0() { return cImportanceImportanceTypeEnumRuleCall_3_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3_3() { return cSemicolonKeyword_3_3; }

		//("importanceQuantitative" "=" importanceQuantitative=INT ";")?
		public Group getGroup_4() { return cGroup_4; }

		//"importanceQuantitative"
		public Keyword getImportanceQuantitativeKeyword_4_0() { return cImportanceQuantitativeKeyword_4_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }

		//importanceQuantitative=INT
		public Assignment getImportanceQuantitativeAssignment_4_2() { return cImportanceQuantitativeAssignment_4_2; }

		//INT
		public RuleCall getImportanceQuantitativeINTTerminalRuleCall_4_2_0() { return cImportanceQuantitativeINTTerminalRuleCall_4_2_0; }

		//";"
		public Keyword getSemicolonKeyword_4_3() { return cSemicolonKeyword_4_3; }

		//("lineColor" "=" lineColor=STRING ";")?
		public Group getGroup_5() { return cGroup_5; }

		//"lineColor"
		public Keyword getLineColorKeyword_5_0() { return cLineColorKeyword_5_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }

		//lineColor=STRING
		public Assignment getLineColorAssignment_5_2() { return cLineColorAssignment_5_2; }

		//STRING
		public RuleCall getLineColorSTRINGTerminalRuleCall_5_2_0() { return cLineColorSTRINGTerminalRuleCall_5_2_0; }

		//";"
		public Keyword getSemicolonKeyword_5_3() { return cSemicolonKeyword_5_3; }

		//("fillColor" "=" fillColor=STRING ";")?
		public Group getGroup_6() { return cGroup_6; }

		//"fillColor"
		public Keyword getFillColorKeyword_6_0() { return cFillColorKeyword_6_0; }

		//"="
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }

		//fillColor=STRING
		public Assignment getFillColorAssignment_6_2() { return cFillColorAssignment_6_2; }

		//STRING
		public RuleCall getFillColorSTRINGTerminalRuleCall_6_2_0() { return cFillColorSTRINGTerminalRuleCall_6_2_0; }

		//";"
		public Keyword getSemicolonKeyword_6_3() { return cSemicolonKeyword_6_3; }

		//("filled" "=" filled=BOOLEAN ";")?
		public Group getGroup_7() { return cGroup_7; }

		//"filled"
		public Keyword getFilledKeyword_7_0() { return cFilledKeyword_7_0; }

		//"="
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }

		//filled=BOOLEAN
		public Assignment getFilledAssignment_7_2() { return cFilledAssignment_7_2; }

		//BOOLEAN
		public RuleCall getFilledBOOLEANTerminalRuleCall_7_2_0() { return cFilledBOOLEANTerminalRuleCall_7_2_0; }

		//";"
		public Keyword getSemicolonKeyword_7_3() { return cSemicolonKeyword_7_3; }

		//("id" "=" id=ID ";")?
		public Group getGroup_8() { return cGroup_8; }

		//"id"
		public Keyword getIdKeyword_8_0() { return cIdKeyword_8_0; }

		//"="
		public Keyword getEqualsSignKeyword_8_1() { return cEqualsSignKeyword_8_1; }

		//id=ID
		public Assignment getIdAssignment_8_2() { return cIdAssignment_8_2; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_8_2_0() { return cIdIDTerminalRuleCall_8_2_0; }

		//";"
		public Keyword getSemicolonKeyword_8_3() { return cSemicolonKeyword_8_3; }

		//("description" "=" description=STRING ";")?
		public Group getGroup_9() { return cGroup_9; }

		//"description"
		public Keyword getDescriptionKeyword_9_0() { return cDescriptionKeyword_9_0; }

		//"="
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }

		//description=STRING
		public Assignment getDescriptionAssignment_9_2() { return cDescriptionAssignment_9_2; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_9_2_0() { return cDescriptionSTRINGTerminalRuleCall_9_2_0; }

		//";"
		public Keyword getSemicolonKeyword_9_3() { return cSemicolonKeyword_9_3; }

		//("includingActor" "=" includedActors+=[grlModel::Actor] ("," includedActors+=[grlModel::Actor])* ";")?
		public Group getGroup_10() { return cGroup_10; }

		//"includingActor"
		public Keyword getIncludingActorKeyword_10_0() { return cIncludingActorKeyword_10_0; }

		//"="
		public Keyword getEqualsSignKeyword_10_1() { return cEqualsSignKeyword_10_1; }

		//includedActors+=[grlModel::Actor]
		public Assignment getIncludedActorsAssignment_10_2() { return cIncludedActorsAssignment_10_2; }

		//[grlModel::Actor]
		public CrossReference getIncludedActorsActorCrossReference_10_2_0() { return cIncludedActorsActorCrossReference_10_2_0; }

		//ID
		public RuleCall getIncludedActorsActorIDTerminalRuleCall_10_2_0_1() { return cIncludedActorsActorIDTerminalRuleCall_10_2_0_1; }

		//("," includedActors+=[grlModel::Actor])*
		public Group getGroup_10_3() { return cGroup_10_3; }

		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }

		//includedActors+=[grlModel::Actor]
		public Assignment getIncludedActorsAssignment_10_3_1() { return cIncludedActorsAssignment_10_3_1; }

		//[grlModel::Actor]
		public CrossReference getIncludedActorsActorCrossReference_10_3_1_0() { return cIncludedActorsActorCrossReference_10_3_1_0; }

		//ID
		public RuleCall getIncludedActorsActorIDTerminalRuleCall_10_3_1_0_1() { return cIncludedActorsActorIDTerminalRuleCall_10_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_10_4() { return cSemicolonKeyword_10_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class IntentionalElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntentionalElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntentionalElementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//IntentionalElement returns grlModel::IntentionalElement:
		//	"intentionalElement" name=ID "{" "}";
		public ParserRule getRule() { return rule; }

		//"intentionalElement" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//"intentionalElement"
		public Keyword getIntentionalElementKeyword_0() { return cIntentionalElementKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ImpactModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImpactModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImpactModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ImpactModel returns grlModel::ImpactModel:
		//	"impactModel" name=ID "{" "}";
		public ParserRule getRule() { return rule; }

		//"impactModel" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//"impactModel"
		public Keyword getImpactModelKeyword_0() { return cImpactModelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	
	
	public class IntentionalElementTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "IntentionalElementType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSoftgoalEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSoftgoalSoftGoalKeyword_0_0 = (Keyword)cSoftgoalEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGoalEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGoalGoalKeyword_1_0 = (Keyword)cGoalEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTaskEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTaskTaskKeyword_2_0 = (Keyword)cTaskEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cRessourceEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cRessourceResourceKeyword_3_0 = (Keyword)cRessourceEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cIndicatorEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cIndicatorIndicatorKeyword_4_0 = (Keyword)cIndicatorEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum IntentionalElementType returns grlModel::IntentionalElementType:
		//	Softgoal="softGoal" | Goal="goal" | Task | Ressource="resource" | Indicator="indicator";
		public EnumRule getRule() { return rule; }

		//Softgoal="softGoal" | Goal="goal" | Task | Ressource="resource" | Indicator="indicator"
		public Alternatives getAlternatives() { return cAlternatives; }

		//Softgoal="softGoal"
		public EnumLiteralDeclaration getSoftgoalEnumLiteralDeclaration_0() { return cSoftgoalEnumLiteralDeclaration_0; }

		//"softGoal"
		public Keyword getSoftgoalSoftGoalKeyword_0_0() { return cSoftgoalSoftGoalKeyword_0_0; }

		//Goal="goal"
		public EnumLiteralDeclaration getGoalEnumLiteralDeclaration_1() { return cGoalEnumLiteralDeclaration_1; }

		//"goal"
		public Keyword getGoalGoalKeyword_1_0() { return cGoalGoalKeyword_1_0; }

		//Task
		public EnumLiteralDeclaration getTaskEnumLiteralDeclaration_2() { return cTaskEnumLiteralDeclaration_2; }

		//"Task"
		public Keyword getTaskTaskKeyword_2_0() { return cTaskTaskKeyword_2_0; }

		//Ressource="resource"
		public EnumLiteralDeclaration getRessourceEnumLiteralDeclaration_3() { return cRessourceEnumLiteralDeclaration_3; }

		//"resource"
		public Keyword getRessourceResourceKeyword_3_0() { return cRessourceResourceKeyword_3_0; }

		//Indicator="indicator"
		public EnumLiteralDeclaration getIndicatorEnumLiteralDeclaration_4() { return cIndicatorEnumLiteralDeclaration_4; }

		//"indicator"
		public Keyword getIndicatorIndicatorKeyword_4_0() { return cIndicatorIndicatorKeyword_4_0; }
	}

	public class ImportanceTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ImportanceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNoneNoneKeyword_0_0 = (Keyword)cNoneEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cHighEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cHighHighKeyword_1_0 = (Keyword)cHighEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMediumEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMediumMediumKeyword_2_0 = (Keyword)cMediumEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLowEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLowLowKeyword_3_0 = (Keyword)cLowEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum ImportanceType returns grlModel::ImportanceType:
		//	None="none" | High="high" | Medium="medium" | Low="low";
		public EnumRule getRule() { return rule; }

		//None="none" | High="high" | Medium="medium" | Low="low"
		public Alternatives getAlternatives() { return cAlternatives; }

		//None="none"
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_0() { return cNoneEnumLiteralDeclaration_0; }

		//"none"
		public Keyword getNoneNoneKeyword_0_0() { return cNoneNoneKeyword_0_0; }

		//High="high"
		public EnumLiteralDeclaration getHighEnumLiteralDeclaration_1() { return cHighEnumLiteralDeclaration_1; }

		//"high"
		public Keyword getHighHighKeyword_1_0() { return cHighHighKeyword_1_0; }

		//Medium="medium"
		public EnumLiteralDeclaration getMediumEnumLiteralDeclaration_2() { return cMediumEnumLiteralDeclaration_2; }

		//"medium"
		public Keyword getMediumMediumKeyword_2_0() { return cMediumMediumKeyword_2_0; }

		//Low="low"
		public EnumLiteralDeclaration getLowEnumLiteralDeclaration_3() { return cLowEnumLiteralDeclaration_3; }

		//"low"
		public Keyword getLowLowKeyword_3_0() { return cLowLowKeyword_3_0; }
	}

	public class DecompositionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "DecompositionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAndEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAndAndKeyword_0_0 = (Keyword)cAndEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOrEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOrOrKeyword_1_0 = (Keyword)cOrEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cXorEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cXorXorKeyword_2_0 = (Keyword)cXorEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum DecompositionType returns grlModel::DecompositionType:
		//	And="and" | Or="or" | Xor="xor";
		public EnumRule getRule() { return rule; }

		//And="and" | Or="or" | Xor="xor"
		public Alternatives getAlternatives() { return cAlternatives; }

		//And="and"
		public EnumLiteralDeclaration getAndEnumLiteralDeclaration_0() { return cAndEnumLiteralDeclaration_0; }

		//"and"
		public Keyword getAndAndKeyword_0_0() { return cAndAndKeyword_0_0; }

		//Or="or"
		public EnumLiteralDeclaration getOrEnumLiteralDeclaration_1() { return cOrEnumLiteralDeclaration_1; }

		//"or"
		public Keyword getOrOrKeyword_1_0() { return cOrOrKeyword_1_0; }

		//Xor="xor"
		public EnumLiteralDeclaration getXorEnumLiteralDeclaration_2() { return cXorEnumLiteralDeclaration_2; }

		//"xor"
		public Keyword getXorXorKeyword_2_0() { return cXorXorKeyword_2_0; }
	}

	public class ContributionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ContributionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMakeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMakeMakeKeyword_0_0 = (Keyword)cMakeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cHelpEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cHelpHelpKeyword_1_0 = (Keyword)cHelpEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSomePositiveEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSomePositiveSomePositiveKeyword_2_0 = (Keyword)cSomePositiveEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cUnknownEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cUnknownUnknownKeyword_3_0 = (Keyword)cUnknownEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSomeNegativeEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSomeNegativeSomeNegativeKeyword_4_0 = (Keyword)cSomeNegativeEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cHurtEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cHurtHurtKeyword_5_0 = (Keyword)cHurtEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cBreakEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cBreakBreakKeyword_6_0 = (Keyword)cBreakEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum ContributionType returns grlModel::ContributionType:
		//	Make="make" | Help="help" | SomePositive="somePositive" | Unknown="unknown" | SomeNegative="someNegative" |
		//	Hurt="hurt" | Break="break";
		public EnumRule getRule() { return rule; }

		//Make="make" | Help="help" | SomePositive="somePositive" | Unknown="unknown" | SomeNegative="someNegative" | Hurt="hurt"
		//| Break="break"
		public Alternatives getAlternatives() { return cAlternatives; }

		//Make="make"
		public EnumLiteralDeclaration getMakeEnumLiteralDeclaration_0() { return cMakeEnumLiteralDeclaration_0; }

		//"make"
		public Keyword getMakeMakeKeyword_0_0() { return cMakeMakeKeyword_0_0; }

		//Help="help"
		public EnumLiteralDeclaration getHelpEnumLiteralDeclaration_1() { return cHelpEnumLiteralDeclaration_1; }

		//"help"
		public Keyword getHelpHelpKeyword_1_0() { return cHelpHelpKeyword_1_0; }

		//SomePositive="somePositive"
		public EnumLiteralDeclaration getSomePositiveEnumLiteralDeclaration_2() { return cSomePositiveEnumLiteralDeclaration_2; }

		//"somePositive"
		public Keyword getSomePositiveSomePositiveKeyword_2_0() { return cSomePositiveSomePositiveKeyword_2_0; }

		//Unknown="unknown"
		public EnumLiteralDeclaration getUnknownEnumLiteralDeclaration_3() { return cUnknownEnumLiteralDeclaration_3; }

		//"unknown"
		public Keyword getUnknownUnknownKeyword_3_0() { return cUnknownUnknownKeyword_3_0; }

		//SomeNegative="someNegative"
		public EnumLiteralDeclaration getSomeNegativeEnumLiteralDeclaration_4() { return cSomeNegativeEnumLiteralDeclaration_4; }

		//"someNegative"
		public Keyword getSomeNegativeSomeNegativeKeyword_4_0() { return cSomeNegativeSomeNegativeKeyword_4_0; }

		//Hurt="hurt"
		public EnumLiteralDeclaration getHurtEnumLiteralDeclaration_5() { return cHurtEnumLiteralDeclaration_5; }

		//"hurt"
		public Keyword getHurtHurtKeyword_5_0() { return cHurtHurtKeyword_5_0; }

		//Break="break"
		public EnumLiteralDeclaration getBreakEnumLiteralDeclaration_6() { return cBreakEnumLiteralDeclaration_6; }

		//"break"
		public Keyword getBreakBreakKeyword_6_0() { return cBreakBreakKeyword_6_0; }
	}
	
	private final URNspecElements pURNspec;
	private final URNdefinitionElements pURNdefinition;
	private final ASDspecElements pASDspec;
	private final GRLspecElements pGRLspec;
	private final ElementLinkElements pElementLink;
	private final ActorElements pActor;
	private final IntentionalElementElements pIntentionalElement;
	private final ImpactModelElements pImpactModel;
	private final IntentionalElementTypeElements unknownRuleIntentionalElementType;
	private final ImportanceTypeElements unknownRuleImportanceType;
	private final DecompositionTypeElements unknownRuleDecompositionType;
	private final ContributionTypeElements unknownRuleContributionType;
	private final TerminalRule tBOOLEAN;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TGRLGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pURNspec = new URNspecElements();
		this.pURNdefinition = new URNdefinitionElements();
		this.pASDspec = new ASDspecElements();
		this.pGRLspec = new GRLspecElements();
		this.pElementLink = new ElementLinkElements();
		this.pActor = new ActorElements();
		this.pIntentionalElement = new IntentionalElementElements();
		this.pImpactModel = new ImpactModelElements();
		this.unknownRuleIntentionalElementType = new IntentionalElementTypeElements();
		this.unknownRuleImportanceType = new ImportanceTypeElements();
		this.unknownRuleDecompositionType = new DecompositionTypeElements();
		this.unknownRuleContributionType = new ContributionTypeElements();
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "BOOLEAN");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.grl.tgrl.TGRL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//URNspec returns urnModel::URNspec:
	//	"urnspec" name=ID "{" urndef=URNdefinition asdspec=ASDspec grlspec=GRLspec? "}";
	public URNspecElements getURNspecAccess() {
		return pURNspec;
	}
	
	public ParserRule getURNspecRule() {
		return getURNspecAccess().getRule();
	}

	//URNdefinition returns urncoreModel::URNdefinition:
	//	"URNdefinition" "{" {urncoreModel::URNdefinition} "}";
	public URNdefinitionElements getURNdefinitionAccess() {
		return pURNdefinition;
	}
	
	public ParserRule getURNdefinitionRule() {
		return getURNdefinitionAccess().getRule();
	}

	//ASDspec returns asdModel::ASDspec:
	//	"asdspec" "{" {asdModel::ASDspec} "}";
	public ASDspecElements getASDspecAccess() {
		return pASDspec;
	}
	
	public ParserRule getASDspecRule() {
		return getASDspecAccess().getRule();
	}

	//GRLspec returns grlModel::GRLspec:
	//	"grl" "{" links+=ElementLink* actors+=Actor* intElements+=IntentionalElement* impactModel=ImpactModel? "}";
	public GRLspecElements getGRLspecAccess() {
		return pGRLspec;
	}
	
	public ParserRule getGRLspecRule() {
		return getGRLspecAccess().getRule();
	}

	//ElementLink returns grlModel::ElementLink:
	//	"elementtLink" name=ID "{" "}";
	public ElementLinkElements getElementLinkAccess() {
		return pElementLink;
	}
	
	public ParserRule getElementLinkRule() {
		return getElementLinkAccess().getRule();
	}

	//Actor returns grlModel::Actor:
	//	"actor" name=ID "{" ("importance" "=" importance=ImportanceType ";")? / *
	//		 *TODO I must give a default value, which is zero, to this attribute.
	//		 * 		This can be done through the post processing mechanism in xText 
	//		 * / ("importanceQuantitative" "=" importanceQuantitative=INT ";")? ("lineColor" "=" lineColor=STRING ";")?
	//	("fillColor" "=" fillColor=STRING ";")? ("filled" "=" filled=BOOLEAN ";")? ("id" "=" id=ID ";")? ("description" "="
	//	description=STRING ";")? ("includingActor" "=" includedActors+=[grlModel::Actor] (","
	//	includedActors+=[grlModel::Actor])* ";")? "}";
	public ActorElements getActorAccess() {
		return pActor;
	}
	
	public ParserRule getActorRule() {
		return getActorAccess().getRule();
	}

	//IntentionalElement returns grlModel::IntentionalElement:
	//	"intentionalElement" name=ID "{" "}";
	public IntentionalElementElements getIntentionalElementAccess() {
		return pIntentionalElement;
	}
	
	public ParserRule getIntentionalElementRule() {
		return getIntentionalElementAccess().getRule();
	}

	//ImpactModel returns grlModel::ImpactModel:
	//	"impactModel" name=ID "{" "}";
	public ImpactModelElements getImpactModelAccess() {
		return pImpactModel;
	}
	
	public ParserRule getImpactModelRule() {
		return getImpactModelAccess().getRule();
	}

	//enum IntentionalElementType returns grlModel::IntentionalElementType:
	//	Softgoal="softGoal" | Goal="goal" | Task | Ressource="resource" | Indicator="indicator";
	public IntentionalElementTypeElements getIntentionalElementTypeAccess() {
		return unknownRuleIntentionalElementType;
	}
	
	public EnumRule getIntentionalElementTypeRule() {
		return getIntentionalElementTypeAccess().getRule();
	}

	//enum ImportanceType returns grlModel::ImportanceType:
	//	None="none" | High="high" | Medium="medium" | Low="low";
	public ImportanceTypeElements getImportanceTypeAccess() {
		return unknownRuleImportanceType;
	}
	
	public EnumRule getImportanceTypeRule() {
		return getImportanceTypeAccess().getRule();
	}

	//enum DecompositionType returns grlModel::DecompositionType:
	//	And="and" | Or="or" | Xor="xor";
	public DecompositionTypeElements getDecompositionTypeAccess() {
		return unknownRuleDecompositionType;
	}
	
	public EnumRule getDecompositionTypeRule() {
		return getDecompositionTypeAccess().getRule();
	}

	//enum ContributionType returns grlModel::ContributionType:
	//	Make="make" | Help="help" | SomePositive="somePositive" | Unknown="unknown" | SomeNegative="someNegative" |
	//	Hurt="hurt" | Break="break";
	public ContributionTypeElements getContributionTypeAccess() {
		return unknownRuleContributionType;
	}
	
	public EnumRule getContributionTypeRule() {
		return getContributionTypeAccess().getRule();
	}

	//terminal BOOLEAN returns ecore::EBoolean:
	//	"false" | "true";
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
